// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/resource (interfaces: ResourceGetter,ResourceDownloadLock)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	resource "github.com/juju/juju/v2/resource"
)

// MockResourceGetter is a mock of ResourceGetter interface.
type MockResourceGetter struct {
	ctrl     *gomock.Controller
	recorder *MockResourceGetterMockRecorder
}

// MockResourceGetterMockRecorder is the mock recorder for MockResourceGetter.
type MockResourceGetterMockRecorder struct {
	mock *MockResourceGetter
}

// NewMockResourceGetter creates a new mock instance.
func NewMockResourceGetter(ctrl *gomock.Controller) *MockResourceGetter {
	mock := &MockResourceGetter{ctrl: ctrl}
	mock.recorder = &MockResourceGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceGetter) EXPECT() *MockResourceGetterMockRecorder {
	return m.recorder
}

// GetResource mocks base method.
func (m *MockResourceGetter) GetResource(arg0 resource.ResourceRequest) (resource.ResourceData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResource", arg0)
	ret0, _ := ret[0].(resource.ResourceData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResource indicates an expected call of GetResource.
func (mr *MockResourceGetterMockRecorder) GetResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResource", reflect.TypeOf((*MockResourceGetter)(nil).GetResource), arg0)
}

// MockResourceDownloadLock is a mock of ResourceDownloadLock interface.
type MockResourceDownloadLock struct {
	ctrl     *gomock.Controller
	recorder *MockResourceDownloadLockMockRecorder
}

// MockResourceDownloadLockMockRecorder is the mock recorder for MockResourceDownloadLock.
type MockResourceDownloadLockMockRecorder struct {
	mock *MockResourceDownloadLock
}

// NewMockResourceDownloadLock creates a new mock instance.
func NewMockResourceDownloadLock(ctrl *gomock.Controller) *MockResourceDownloadLock {
	mock := &MockResourceDownloadLock{ctrl: ctrl}
	mock.recorder = &MockResourceDownloadLockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceDownloadLock) EXPECT() *MockResourceDownloadLockMockRecorder {
	return m.recorder
}

// Acquire mocks base method.
func (m *MockResourceDownloadLock) Acquire(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Acquire", arg0)
}

// Acquire indicates an expected call of Acquire.
func (mr *MockResourceDownloadLockMockRecorder) Acquire(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Acquire", reflect.TypeOf((*MockResourceDownloadLock)(nil).Acquire), arg0)
}

// Release mocks base method.
func (m *MockResourceDownloadLock) Release(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Release", arg0)
}

// Release indicates an expected call of Release.
func (mr *MockResourceDownloadLockMockRecorder) Release(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Release", reflect.TypeOf((*MockResourceDownloadLock)(nil).Release), arg0)
}
