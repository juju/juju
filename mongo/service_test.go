// Copyright 2015 Canonical Ltd.
// Licensed under the AGPLv3, see LICENCE file for details.

package mongo_test

import (
	"fmt"
	"io/ioutil"
	"path/filepath"
	"time"

	"github.com/juju/clock/testclock"
	jc "github.com/juju/testing/checkers"
	gc "gopkg.in/check.v1"

	"github.com/juju/juju/mongo"
	coretesting "github.com/juju/juju/testing"
)

type serviceSuite struct {
	coretesting.BaseSuite
}

var _ = gc.Suite(&serviceSuite{})

func (s *serviceSuite) TestNewConfSnap(c *gc.C) {
	dataDir := "/var/lib/juju"
	dbDir := dataDir + "/db"
	logPath := dataDir + "/logs/mongodb.log"
	confArgs := mongo.ConfigArgs{
		Clock:                 testclock.NewClock(time.Now()),
		DataDir:               dataDir,
		DBDir:                 dbDir,
		Port:                  12345,
		OplogSizeMB:           10,
		IPv6:                  true,
		LogAppend:             true,
		LogPath:               logPath,
		ReplicaSet:            "juju",
		MemoryProfile:         mongo.MemoryProfileLow,
		PEMKeyFile:            "/var/lib/juju/server.pem",
		PEMKeyPassword:        "ignored",
		AuthKeyFile:           "/var/lib/juju/shared-secret",
		Syslog:                true,
		Quiet:                 true,
		TLSMode:               "requireTLS",
		WiredTigerCacheSizeGB: 0.25,
		BindToAllIP:           true,
	}
	confFile := filepath.Join(c.MkDir(), "conf")
	err := mongo.WriteConfig(confArgs, confFile)
	c.Assert(err, jc.ErrorIsNil)

	contents, err := ioutil.ReadFile(confFile)
	c.Assert(err, jc.ErrorIsNil)
	expected := fmt.Sprintf(`
# WARNING
# autogenerated by juju on %s
# manual changes to this file are likely be overwritten
auth = true
bind_ip_all = true
dbpath = %s/db
ipv6 = true
journal = true
keyFile = %s/shared-secret
logappend = true
logpath = %s/logs/mongodb.log
oplogSize = 10
port = 12345
quiet = true
replSet = juju
storageEngine = wiredTiger
syslog = true
tlsCertificateKeyFile = %s/server.pem
tlsCertificateKeyFilePassword=ignored
tlsMode = requireTLS
wiredTigerCacheSizeGB = 0.25`[1:], confArgs.Clock.Now().UTC().Format(time.RFC822), dataDir, dataDir, dataDir, dataDir)

	c.Assert(string(contents), jc.DeepEquals, expected)

}
