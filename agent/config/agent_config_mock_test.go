// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/agent/config (interfaces: AgentConfigReader)
//
// Generated by this command:
//
//	mockgen -typed -package config -destination agent_config_mock_test.go github.com/juju/juju/agent/config AgentConfigReader
//

// Package config is a generated GoMock package.
package config

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAgentConfigReader is a mock of AgentConfigReader interface.
type MockAgentConfigReader struct {
	ctrl     *gomock.Controller
	recorder *MockAgentConfigReaderMockRecorder
}

// MockAgentConfigReaderMockRecorder is the mock recorder for MockAgentConfigReader.
type MockAgentConfigReaderMockRecorder struct {
	mock *MockAgentConfigReader
}

// NewMockAgentConfigReader creates a new mock instance.
func NewMockAgentConfigReader(ctrl *gomock.Controller) *MockAgentConfigReader {
	mock := &MockAgentConfigReader{ctrl: ctrl}
	mock.recorder = &MockAgentConfigReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgentConfigReader) EXPECT() *MockAgentConfigReaderMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockAgentConfigReader) ISGOMOCK() struct{} {
	return struct{}{}
}

// ReadConfig mocks base method.
func (m *MockAgentConfigReader) ReadConfig(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadConfig", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReadConfig indicates an expected call of ReadConfig.
func (mr *MockAgentConfigReaderMockRecorder) ReadConfig(arg0 any) *MockAgentConfigReaderReadConfigCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadConfig", reflect.TypeOf((*MockAgentConfigReader)(nil).ReadConfig), arg0)
	return &MockAgentConfigReaderReadConfigCall{Call: call}
}

// MockAgentConfigReaderReadConfigCall wrap *gomock.Call
type MockAgentConfigReaderReadConfigCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAgentConfigReaderReadConfigCall) Return(arg0 error) *MockAgentConfigReaderReadConfigCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAgentConfigReaderReadConfigCall) Do(f func(string) error) *MockAgentConfigReaderReadConfigCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAgentConfigReaderReadConfigCall) DoAndReturn(f func(string) error) *MockAgentConfigReaderReadConfigCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
