// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/domain/modelagent (interfaces: Storage)
//
// Generated by this command:
//
//	mockgen -typed -package service -destination domain_mock_test.go github.com/juju/juju/domain/modelagent Storage
//

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	binarystorage "github.com/juju/juju/state/binarystorage"
	gomock "go.uber.org/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// AllMetadata mocks base method.
func (m *MockStorage) AllMetadata() ([]binarystorage.Metadata, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllMetadata")
	ret0, _ := ret[0].([]binarystorage.Metadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllMetadata indicates an expected call of AllMetadata.
func (mr *MockStorageMockRecorder) AllMetadata() *MockStorageAllMetadataCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllMetadata", reflect.TypeOf((*MockStorage)(nil).AllMetadata))
	return &MockStorageAllMetadataCall{Call: call}
}

// MockStorageAllMetadataCall wrap *gomock.Call
type MockStorageAllMetadataCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockStorageAllMetadataCall) Return(arg0 []binarystorage.Metadata, arg1 error) *MockStorageAllMetadataCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockStorageAllMetadataCall) Do(f func() ([]binarystorage.Metadata, error)) *MockStorageAllMetadataCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockStorageAllMetadataCall) DoAndReturn(f func() ([]binarystorage.Metadata, error)) *MockStorageAllMetadataCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
