// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/apiserver/facades/client/bundle (interfaces: ModelMigrationFactory)
//
// Generated by this command:
//
//	mockgen -typed -package bundle -destination migration_mock_test.go github.com/juju/juju/apiserver/facades/client/bundle ModelMigrationFactory
//

// Package bundle is a generated GoMock package.
package bundle

import (
	context "context"
	reflect "reflect"

	facade "github.com/juju/juju/apiserver/facade"
	model "github.com/juju/juju/core/model"
	gomock "go.uber.org/mock/gomock"
)

// MockModelMigrationFactory is a mock of ModelMigrationFactory interface.
type MockModelMigrationFactory struct {
	ctrl     *gomock.Controller
	recorder *MockModelMigrationFactoryMockRecorder
}

// MockModelMigrationFactoryMockRecorder is the mock recorder for MockModelMigrationFactory.
type MockModelMigrationFactoryMockRecorder struct {
	mock *MockModelMigrationFactory
}

// NewMockModelMigrationFactory creates a new mock instance.
func NewMockModelMigrationFactory(ctrl *gomock.Controller) *MockModelMigrationFactory {
	mock := &MockModelMigrationFactory{ctrl: ctrl}
	mock.recorder = &MockModelMigrationFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockModelMigrationFactory) EXPECT() *MockModelMigrationFactoryMockRecorder {
	return m.recorder
}

// ModelExporter mocks base method.
func (m *MockModelMigrationFactory) ModelExporter(arg0 context.Context, arg1 model.UUID, arg2 facade.LegacyStateExporter) (facade.ModelExporter, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModelExporter", arg0, arg1, arg2)
	ret0, _ := ret[0].(facade.ModelExporter)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ModelExporter indicates an expected call of ModelExporter.
func (mr *MockModelMigrationFactoryMockRecorder) ModelExporter(arg0, arg1, arg2 any) *MockModelMigrationFactoryModelExporterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModelExporter", reflect.TypeOf((*MockModelMigrationFactory)(nil).ModelExporter), arg0, arg1, arg2)
	return &MockModelMigrationFactoryModelExporterCall{Call: call}
}

// MockModelMigrationFactoryModelExporterCall wrap *gomock.Call
type MockModelMigrationFactoryModelExporterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockModelMigrationFactoryModelExporterCall) Return(arg0 facade.ModelExporter, arg1 error) *MockModelMigrationFactoryModelExporterCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockModelMigrationFactoryModelExporterCall) Do(f func(context.Context, model.UUID, facade.LegacyStateExporter) (facade.ModelExporter, error)) *MockModelMigrationFactoryModelExporterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockModelMigrationFactoryModelExporterCall) DoAndReturn(f func(context.Context, model.UUID, facade.LegacyStateExporter) (facade.ModelExporter, error)) *MockModelMigrationFactoryModelExporterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
