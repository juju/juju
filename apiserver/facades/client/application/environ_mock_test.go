// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/environs (interfaces: InstancePrechecker)
//
// Generated by this command:
//
//	mockgen -typed -package application -destination environ_mock_test.go github.com/juju/juju/environs InstancePrechecker
//

// Package application is a generated GoMock package.
package application

import (
	reflect "reflect"

	environs "github.com/juju/juju/environs"
	envcontext "github.com/juju/juju/environs/envcontext"
	gomock "go.uber.org/mock/gomock"
)

// MockInstancePrechecker is a mock of InstancePrechecker interface.
type MockInstancePrechecker struct {
	ctrl     *gomock.Controller
	recorder *MockInstancePrecheckerMockRecorder
}

// MockInstancePrecheckerMockRecorder is the mock recorder for MockInstancePrechecker.
type MockInstancePrecheckerMockRecorder struct {
	mock *MockInstancePrechecker
}

// NewMockInstancePrechecker creates a new mock instance.
func NewMockInstancePrechecker(ctrl *gomock.Controller) *MockInstancePrechecker {
	mock := &MockInstancePrechecker{ctrl: ctrl}
	mock.recorder = &MockInstancePrecheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInstancePrechecker) EXPECT() *MockInstancePrecheckerMockRecorder {
	return m.recorder
}

// PrecheckInstance mocks base method.
func (m *MockInstancePrechecker) PrecheckInstance(arg0 envcontext.ProviderCallContext, arg1 environs.PrecheckInstanceParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrecheckInstance", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PrecheckInstance indicates an expected call of PrecheckInstance.
func (mr *MockInstancePrecheckerMockRecorder) PrecheckInstance(arg0, arg1 any) *MockInstancePrecheckerPrecheckInstanceCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrecheckInstance", reflect.TypeOf((*MockInstancePrechecker)(nil).PrecheckInstance), arg0, arg1)
	return &MockInstancePrecheckerPrecheckInstanceCall{Call: call}
}

// MockInstancePrecheckerPrecheckInstanceCall wrap *gomock.Call
type MockInstancePrecheckerPrecheckInstanceCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockInstancePrecheckerPrecheckInstanceCall) Return(arg0 error) *MockInstancePrecheckerPrecheckInstanceCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockInstancePrecheckerPrecheckInstanceCall) Do(f func(envcontext.ProviderCallContext, environs.PrecheckInstanceParams) error) *MockInstancePrecheckerPrecheckInstanceCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockInstancePrecheckerPrecheckInstanceCall) DoAndReturn(f func(envcontext.ProviderCallContext, environs.PrecheckInstanceParams) error) *MockInstancePrecheckerPrecheckInstanceCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
