// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/apiserver/facades/agent/spacenamer (interfaces: ModelCache)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	cache "github.com/juju/juju/core/cache"
	reflect "reflect"
)

// MockModelCache is a mock of ModelCache interface
type MockModelCache struct {
	ctrl     *gomock.Controller
	recorder *MockModelCacheMockRecorder
}

// MockModelCacheMockRecorder is the mock recorder for MockModelCache
type MockModelCacheMockRecorder struct {
	mock *MockModelCache
}

// NewMockModelCache creates a new mock instance
func NewMockModelCache(ctrl *gomock.Controller) *MockModelCache {
	mock := &MockModelCache{ctrl: ctrl}
	mock.recorder = &MockModelCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockModelCache) EXPECT() *MockModelCacheMockRecorder {
	return m.recorder
}

// WatchConfig mocks base method
func (m *MockModelCache) WatchConfig(arg0 ...string) *cache.ConfigWatcher {
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "WatchConfig", varargs...)
	ret0, _ := ret[0].(*cache.ConfigWatcher)
	return ret0
}

// WatchConfig indicates an expected call of WatchConfig
func (mr *MockModelCacheMockRecorder) WatchConfig(arg0 ...interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WatchConfig", reflect.TypeOf((*MockModelCache)(nil).WatchConfig), arg0...)
}
