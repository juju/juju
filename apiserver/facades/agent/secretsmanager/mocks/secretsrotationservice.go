// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/apiserver/facades/agent/secretsmanager (interfaces: SecretsRotation)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	secrets "github.com/juju/juju/core/secrets"
	state "github.com/juju/juju/state"
)

// MockSecretsRotation is a mock of SecretsRotation interface.
type MockSecretsRotation struct {
	ctrl     *gomock.Controller
	recorder *MockSecretsRotationMockRecorder
}

// MockSecretsRotationMockRecorder is the mock recorder for MockSecretsRotation.
type MockSecretsRotationMockRecorder struct {
	mock *MockSecretsRotation
}

// NewMockSecretsRotation creates a new mock instance.
func NewMockSecretsRotation(ctrl *gomock.Controller) *MockSecretsRotation {
	mock := &MockSecretsRotation{ctrl: ctrl}
	mock.recorder = &MockSecretsRotationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretsRotation) EXPECT() *MockSecretsRotationMockRecorder {
	return m.recorder
}

// SecretRotated mocks base method.
func (m *MockSecretsRotation) SecretRotated(arg0 *secrets.URL, arg1 time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SecretRotated", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SecretRotated indicates an expected call of SecretRotated.
func (mr *MockSecretsRotationMockRecorder) SecretRotated(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretRotated", reflect.TypeOf((*MockSecretsRotation)(nil).SecretRotated), arg0, arg1)
}

// WatchSecretsRotationChanges mocks base method.
func (m *MockSecretsRotation) WatchSecretsRotationChanges(arg0 string) state.SecretsRotationWatcher {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WatchSecretsRotationChanges", arg0)
	ret0, _ := ret[0].(state.SecretsRotationWatcher)
	return ret0
}

// WatchSecretsRotationChanges indicates an expected call of WatchSecretsRotationChanges.
func (mr *MockSecretsRotationMockRecorder) WatchSecretsRotationChanges(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WatchSecretsRotationChanges", reflect.TypeOf((*MockSecretsRotation)(nil).WatchSecretsRotationChanges), arg0)
}
