// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/core/network (interfaces: LinkLayerDevice,LinkLayerDeviceAddress)

// Package network is a generated GoMock package.
package network

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLinkLayerDevice is a mock of LinkLayerDevice interface
type MockLinkLayerDevice struct {
	ctrl     *gomock.Controller
	recorder *MockLinkLayerDeviceMockRecorder
}

// MockLinkLayerDeviceMockRecorder is the mock recorder for MockLinkLayerDevice
type MockLinkLayerDeviceMockRecorder struct {
	mock *MockLinkLayerDevice
}

// NewMockLinkLayerDevice creates a new mock instance
func NewMockLinkLayerDevice(ctrl *gomock.Controller) *MockLinkLayerDevice {
	mock := &MockLinkLayerDevice{ctrl: ctrl}
	mock.recorder = &MockLinkLayerDeviceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLinkLayerDevice) EXPECT() *MockLinkLayerDeviceMockRecorder {
	return m.recorder
}

// Addresses mocks base method
func (m *MockLinkLayerDevice) Addresses() ([]LinkLayerDeviceAddress, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Addresses")
	ret0, _ := ret[0].([]LinkLayerDeviceAddress)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Addresses indicates an expected call of Addresses
func (mr *MockLinkLayerDeviceMockRecorder) Addresses() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Addresses", reflect.TypeOf((*MockLinkLayerDevice)(nil).Addresses))
}

// ProviderID mocks base method
func (m *MockLinkLayerDevice) ProviderID() Id {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProviderID")
	ret0, _ := ret[0].(Id)
	return ret0
}

// ProviderID indicates an expected call of ProviderID
func (mr *MockLinkLayerDeviceMockRecorder) ProviderID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProviderID", reflect.TypeOf((*MockLinkLayerDevice)(nil).ProviderID))
}

// MockLinkLayerDeviceAddress is a mock of LinkLayerDeviceAddress interface
type MockLinkLayerDeviceAddress struct {
	ctrl     *gomock.Controller
	recorder *MockLinkLayerDeviceAddressMockRecorder
}

// MockLinkLayerDeviceAddressMockRecorder is the mock recorder for MockLinkLayerDeviceAddress
type MockLinkLayerDeviceAddressMockRecorder struct {
	mock *MockLinkLayerDeviceAddress
}

// NewMockLinkLayerDeviceAddress creates a new mock instance
func NewMockLinkLayerDeviceAddress(ctrl *gomock.Controller) *MockLinkLayerDeviceAddress {
	mock := &MockLinkLayerDeviceAddress{ctrl: ctrl}
	mock.recorder = &MockLinkLayerDeviceAddressMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLinkLayerDeviceAddress) EXPECT() *MockLinkLayerDeviceAddressMockRecorder {
	return m.recorder
}

// Origin mocks base method
func (m *MockLinkLayerDeviceAddress) Origin() Origin {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Origin")
	ret0, _ := ret[0].(Origin)
	return ret0
}

// Origin indicates an expected call of Origin
func (mr *MockLinkLayerDeviceAddressMockRecorder) Origin() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Origin", reflect.TypeOf((*MockLinkLayerDeviceAddress)(nil).Origin))
}

// Value mocks base method
func (m *MockLinkLayerDeviceAddress) Value() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Value")
	ret0, _ := ret[0].(string)
	return ret0
}

// Value indicates an expected call of Value
func (mr *MockLinkLayerDeviceAddressMockRecorder) Value() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Value", reflect.TypeOf((*MockLinkLayerDeviceAddress)(nil).Value))
}
