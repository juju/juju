// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/core/output/progress (interfaces: Terminal)
//
// Generated by this command:
//
//	mockgen -typed -package mocks -destination ./mocks/term_mock.go github.com/juju/juju/core/output/progress Terminal
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTerminal is a mock of Terminal interface.
type MockTerminal struct {
	ctrl     *gomock.Controller
	recorder *MockTerminalMockRecorder
}

// MockTerminalMockRecorder is the mock recorder for MockTerminal.
type MockTerminalMockRecorder struct {
	mock *MockTerminal
}

// NewMockTerminal creates a new mock instance.
func NewMockTerminal(ctrl *gomock.Controller) *MockTerminal {
	mock := &MockTerminal{ctrl: ctrl}
	mock.recorder = &MockTerminalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTerminal) EXPECT() *MockTerminalMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockTerminal) ISGOMOCK() struct{} {
	return struct{}{}
}

// Width mocks base method.
func (m *MockTerminal) Width() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Width")
	ret0, _ := ret[0].(int)
	return ret0
}

// Width indicates an expected call of Width.
func (mr *MockTerminalMockRecorder) Width() *MockTerminalWidthCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Width", reflect.TypeOf((*MockTerminal)(nil).Width))
	return &MockTerminalWidthCall{Call: call}
}

// MockTerminalWidthCall wrap *gomock.Call
type MockTerminalWidthCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockTerminalWidthCall) Return(arg0 int) *MockTerminalWidthCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockTerminalWidthCall) Do(f func() int) *MockTerminalWidthCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockTerminalWidthCall) DoAndReturn(f func() int) *MockTerminalWidthCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
