// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/core/charm (interfaces: SelectorModelConfig)
//
// Generated by this command:
//
//	mockgen -typed -package charm -destination core_charm_mock_test.go github.com/juju/juju/core/charm SelectorModelConfig
//

// Package charm is a generated GoMock package.
package charm

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSelectorModelConfig is a mock of SelectorModelConfig interface.
type MockSelectorModelConfig struct {
	ctrl     *gomock.Controller
	recorder *MockSelectorModelConfigMockRecorder
}

// MockSelectorModelConfigMockRecorder is the mock recorder for MockSelectorModelConfig.
type MockSelectorModelConfigMockRecorder struct {
	mock *MockSelectorModelConfig
}

// NewMockSelectorModelConfig creates a new mock instance.
func NewMockSelectorModelConfig(ctrl *gomock.Controller) *MockSelectorModelConfig {
	mock := &MockSelectorModelConfig{ctrl: ctrl}
	mock.recorder = &MockSelectorModelConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSelectorModelConfig) EXPECT() *MockSelectorModelConfigMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockSelectorModelConfig) ISGOMOCK() struct{} {
	return struct{}{}
}

// DefaultBase mocks base method.
func (m *MockSelectorModelConfig) DefaultBase() (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DefaultBase")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// DefaultBase indicates an expected call of DefaultBase.
func (mr *MockSelectorModelConfigMockRecorder) DefaultBase() *MockSelectorModelConfigDefaultBaseCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DefaultBase", reflect.TypeOf((*MockSelectorModelConfig)(nil).DefaultBase))
	return &MockSelectorModelConfigDefaultBaseCall{Call: call}
}

// MockSelectorModelConfigDefaultBaseCall wrap *gomock.Call
type MockSelectorModelConfigDefaultBaseCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockSelectorModelConfigDefaultBaseCall) Return(arg0 string, arg1 bool) *MockSelectorModelConfigDefaultBaseCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockSelectorModelConfigDefaultBaseCall) Do(f func() (string, bool)) *MockSelectorModelConfigDefaultBaseCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockSelectorModelConfigDefaultBaseCall) DoAndReturn(f func() (string, bool)) *MockSelectorModelConfigDefaultBaseCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
