// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/environs (interfaces: CloudDetector)

// Package testing is a generated GoMock package.
package testing

import (
	gomock "github.com/golang/mock/gomock"
	cloud "github.com/juju/juju/cloud"
	reflect "reflect"
)

// MockCloudDetector is a mock of CloudDetector interface
type MockCloudDetector struct {
	ctrl     *gomock.Controller
	recorder *MockCloudDetectorMockRecorder
}

// MockCloudDetectorMockRecorder is the mock recorder for MockCloudDetector
type MockCloudDetectorMockRecorder struct {
	mock *MockCloudDetector
}

// NewMockCloudDetector creates a new mock instance
func NewMockCloudDetector(ctrl *gomock.Controller) *MockCloudDetector {
	mock := &MockCloudDetector{ctrl: ctrl}
	mock.recorder = &MockCloudDetectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCloudDetector) EXPECT() *MockCloudDetectorMockRecorder {
	return m.recorder
}

// DetectCloud mocks base method
func (m *MockCloudDetector) DetectCloud(arg0 string) (cloud.Cloud, error) {
	ret := m.ctrl.Call(m, "DetectCloud", arg0)
	ret0, _ := ret[0].(cloud.Cloud)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DetectCloud indicates an expected call of DetectCloud
func (mr *MockCloudDetectorMockRecorder) DetectCloud(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DetectCloud", reflect.TypeOf((*MockCloudDetector)(nil).DetectCloud), arg0)
}

// DetectClouds mocks base method
func (m *MockCloudDetector) DetectClouds() ([]cloud.Cloud, error) {
	ret := m.ctrl.Call(m, "DetectClouds")
	ret0, _ := ret[0].([]cloud.Cloud)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DetectClouds indicates an expected call of DetectClouds
func (mr *MockCloudDetectorMockRecorder) DetectClouds() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DetectClouds", reflect.TypeOf((*MockCloudDetector)(nil).DetectClouds))
}
