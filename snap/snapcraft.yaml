name: juju
version: 2.8.1
summary: juju client
description: Through the use of charms, juju provides you with shareable, re-usable, and repeatable expressions of devops best practices.
confinement: classic
grade: devel
base: core18

apps:
  juju:
    environment:
      # Make sure we access snap binaries first (i.e. juju-metadata lp:1759013)
      PATH: "$SNAP/bin:$SNAP/usr/bin:/snap/bin:$PATH"
    command: bin/juju
  fetch-oci:
    daemon: oneshot
    command: wrappers/fetch-oci

parts:
  wrappers:
    plugin: dump
    source: snap/local
  juju:
    # TODO(hpidcock): move to upstream go plugin when it has the features we need.
    plugin: juju-go
    go-channel: 1.14/stable
    # The source can be your local tree or github
    # source: https://github.com/juju/juju.git
    # If you pull a remote, set source-depth to 1 to make the fetch shorter
    # source-depth: 1
    # source: file:///full/file/path
    # By default, reuse existing tree
    source: .
    # TODO(wallyworld) - uncomment source-type once LP:1860526 is fixed. 
    #source-type: git
    # You can grab a specific tag, commit, or branch
    # source-tag: juju-2.0.2
    # source-commit: a83896d913d7e43c960e441c1e41612116d92d46
    # source-branch: develop
    # apply patches before building
    go-packages:
      - github.com/juju/juju/cmd/juju
      # If you are releasing a build with public streams, you don't need to build the agent
      # Instead, you should use the released agent
      - github.com/juju/juju/cmd/jujuc
      - github.com/juju/juju/cmd/jujud
      - github.com/juju/juju/cmd/plugins/juju-metadata
    # go-external-strings is not supported by the standard go plugin.
    # these strings are filled in by CI.
    go-external-strings:
      github.com/juju/juju/version.GitCommit: ""
      github.com/juju/juju/version.GitTreeState: ""
      github.com/juju/juju/version.build: ""
    # go-static is not supported by the standard go plugin.
    go-static: true
    override-build: |
      snapcraftctl build

      mkdir -p $SNAPCRAFT_PART_INSTALL/bash_completions
      cp -a etc/bash_completion.d/juju* $SNAPCRAFT_PART_INSTALL/bash_completions/.
      # If you are releasing a build with public streams, copy in the agent directly
      # If needed, grab the agent from streams
      # curl http://streams.canonical.com/juju/tools/agent/$SNAPCRAFT_PROJECT_VERSION/juju-$SNAPCRAFT_PROJECT_VERSION-ubuntu-amd64.tgz | tar xz -C $SNAPCRAFT_PART_INSTALL/bin/
      jujud=$SNAPCRAFT_PART_INSTALL/bin/jujud
      version=$(jujud version)
      hash=$(sha256sum $jujud | cut -d " " -f 1)
      cat > jujud-versions.yaml <<EOF
      versions:
        - version: $version
          sha256: $hash
      EOF
      cp -a jujud-versions.yaml $SNAPCRAFT_PART_INSTALL/bin

hooks:
  connect-plug-peers: {}
  disconnect-plug-peers: {}
  post-refresh: {}

plugs:
  peers:
    interface: content
    content: microk8s
    target: $SNAP_COMMON/.peers
