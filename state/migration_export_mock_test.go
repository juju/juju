// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/state (interfaces: RemoteEntitiesModel)

// Package state is a generated GoMock package.
package state

import (
	gomock "github.com/golang/mock/gomock"
	description "github.com/juju/description"
	reflect "reflect"
)

// MockRemoteEntitiesModel is a mock of RemoteEntitiesModel interface
type MockRemoteEntitiesModel struct {
	ctrl     *gomock.Controller
	recorder *MockRemoteEntitiesModelMockRecorder
}

// MockRemoteEntitiesModelMockRecorder is the mock recorder for MockRemoteEntitiesModel
type MockRemoteEntitiesModelMockRecorder struct {
	mock *MockRemoteEntitiesModel
}

// NewMockRemoteEntitiesModel creates a new mock instance
func NewMockRemoteEntitiesModel(ctrl *gomock.Controller) *MockRemoteEntitiesModel {
	mock := &MockRemoteEntitiesModel{ctrl: ctrl}
	mock.recorder = &MockRemoteEntitiesModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRemoteEntitiesModel) EXPECT() *MockRemoteEntitiesModelMockRecorder {
	return m.recorder
}

// AddRemoteEntity mocks base method
func (m *MockRemoteEntitiesModel) AddRemoteEntity(arg0 description.RemoteEntityArgs) description.RemoteEntity {
	ret := m.ctrl.Call(m, "AddRemoteEntity", arg0)
	ret0, _ := ret[0].(description.RemoteEntity)
	return ret0
}

// AddRemoteEntity indicates an expected call of AddRemoteEntity
func (mr *MockRemoteEntitiesModelMockRecorder) AddRemoteEntity(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRemoteEntity", reflect.TypeOf((*MockRemoteEntitiesModel)(nil).AddRemoteEntity), arg0)
}
