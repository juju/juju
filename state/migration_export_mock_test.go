// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/state (interfaces: RemoteEntitiesSource,RemoteEntitiesModel,RelationNetworksSource,RelationNetworksModel)

// Package state is a generated GoMock package.
package state

import (
	gomock "github.com/golang/mock/gomock"
	description "github.com/juju/description"
	reflect "reflect"
)

// MockRemoteEntitiesSource is a mock of RemoteEntitiesSource interface
type MockRemoteEntitiesSource struct {
	ctrl     *gomock.Controller
	recorder *MockRemoteEntitiesSourceMockRecorder
}

// MockRemoteEntitiesSourceMockRecorder is the mock recorder for MockRemoteEntitiesSource
type MockRemoteEntitiesSourceMockRecorder struct {
	mock *MockRemoteEntitiesSource
}

// NewMockRemoteEntitiesSource creates a new mock instance
func NewMockRemoteEntitiesSource(ctrl *gomock.Controller) *MockRemoteEntitiesSource {
	mock := &MockRemoteEntitiesSource{ctrl: ctrl}
	mock.recorder = &MockRemoteEntitiesSourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRemoteEntitiesSource) EXPECT() *MockRemoteEntitiesSourceMockRecorder {
	return m.recorder
}

// AllRemoteEntities mocks base method
func (m *MockRemoteEntitiesSource) AllRemoteEntities() ([]RemoteEntity, error) {
	ret := m.ctrl.Call(m, "AllRemoteEntities")
	ret0, _ := ret[0].([]RemoteEntity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllRemoteEntities indicates an expected call of AllRemoteEntities
func (mr *MockRemoteEntitiesSourceMockRecorder) AllRemoteEntities() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllRemoteEntities", reflect.TypeOf((*MockRemoteEntitiesSource)(nil).AllRemoteEntities))
}

// MockRemoteEntitiesModel is a mock of RemoteEntitiesModel interface
type MockRemoteEntitiesModel struct {
	ctrl     *gomock.Controller
	recorder *MockRemoteEntitiesModelMockRecorder
}

// MockRemoteEntitiesModelMockRecorder is the mock recorder for MockRemoteEntitiesModel
type MockRemoteEntitiesModelMockRecorder struct {
	mock *MockRemoteEntitiesModel
}

// NewMockRemoteEntitiesModel creates a new mock instance
func NewMockRemoteEntitiesModel(ctrl *gomock.Controller) *MockRemoteEntitiesModel {
	mock := &MockRemoteEntitiesModel{ctrl: ctrl}
	mock.recorder = &MockRemoteEntitiesModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRemoteEntitiesModel) EXPECT() *MockRemoteEntitiesModelMockRecorder {
	return m.recorder
}

// AddRemoteEntity mocks base method
func (m *MockRemoteEntitiesModel) AddRemoteEntity(arg0 description.RemoteEntityArgs) description.RemoteEntity {
	ret := m.ctrl.Call(m, "AddRemoteEntity", arg0)
	ret0, _ := ret[0].(description.RemoteEntity)
	return ret0
}

// AddRemoteEntity indicates an expected call of AddRemoteEntity
func (mr *MockRemoteEntitiesModelMockRecorder) AddRemoteEntity(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRemoteEntity", reflect.TypeOf((*MockRemoteEntitiesModel)(nil).AddRemoteEntity), arg0)
}

// MockRelationNetworksSource is a mock of RelationNetworksSource interface
type MockRelationNetworksSource struct {
	ctrl     *gomock.Controller
	recorder *MockRelationNetworksSourceMockRecorder
}

// MockRelationNetworksSourceMockRecorder is the mock recorder for MockRelationNetworksSource
type MockRelationNetworksSourceMockRecorder struct {
	mock *MockRelationNetworksSource
}

// NewMockRelationNetworksSource creates a new mock instance
func NewMockRelationNetworksSource(ctrl *gomock.Controller) *MockRelationNetworksSource {
	mock := &MockRelationNetworksSource{ctrl: ctrl}
	mock.recorder = &MockRelationNetworksSourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRelationNetworksSource) EXPECT() *MockRelationNetworksSourceMockRecorder {
	return m.recorder
}

// AllRelationNetworks mocks base method
func (m *MockRelationNetworksSource) AllRelationNetworks() ([]RelationNetworks, error) {
	ret := m.ctrl.Call(m, "AllRelationNetworks")
	ret0, _ := ret[0].([]RelationNetworks)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllRelationNetworks indicates an expected call of AllRelationNetworks
func (mr *MockRelationNetworksSourceMockRecorder) AllRelationNetworks() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllRelationNetworks", reflect.TypeOf((*MockRelationNetworksSource)(nil).AllRelationNetworks))
}

// MockRelationNetworksModel is a mock of RelationNetworksModel interface
type MockRelationNetworksModel struct {
	ctrl     *gomock.Controller
	recorder *MockRelationNetworksModelMockRecorder
}

// MockRelationNetworksModelMockRecorder is the mock recorder for MockRelationNetworksModel
type MockRelationNetworksModelMockRecorder struct {
	mock *MockRelationNetworksModel
}

// NewMockRelationNetworksModel creates a new mock instance
func NewMockRelationNetworksModel(ctrl *gomock.Controller) *MockRelationNetworksModel {
	mock := &MockRelationNetworksModel{ctrl: ctrl}
	mock.recorder = &MockRelationNetworksModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRelationNetworksModel) EXPECT() *MockRelationNetworksModelMockRecorder {
	return m.recorder
}

// AddRelationNetwork mocks base method
func (m *MockRelationNetworksModel) AddRelationNetwork(arg0 description.RelationNetworkArgs) description.RelationNetwork {
	ret := m.ctrl.Call(m, "AddRelationNetwork", arg0)
	ret0, _ := ret[0].(description.RelationNetwork)
	return ret0
}

// AddRelationNetwork indicates an expected call of AddRelationNetwork
func (mr *MockRelationNetworksModelMockRecorder) AddRelationNetwork(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRelationNetwork", reflect.TypeOf((*MockRelationNetworksModel)(nil).AddRelationNetwork), arg0)
}
