// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/state (interfaces: RelationNetworks)

// Package state is a generated GoMock package.
package state

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRelationNetworks is a mock of RelationNetworks interface
type MockRelationNetworks struct {
	ctrl     *gomock.Controller
	recorder *MockRelationNetworksMockRecorder
}

// MockRelationNetworksMockRecorder is the mock recorder for MockRelationNetworks
type MockRelationNetworksMockRecorder struct {
	mock *MockRelationNetworks
}

// NewMockRelationNetworks creates a new mock instance
func NewMockRelationNetworks(ctrl *gomock.Controller) *MockRelationNetworks {
	mock := &MockRelationNetworks{ctrl: ctrl}
	mock.recorder = &MockRelationNetworksMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRelationNetworks) EXPECT() *MockRelationNetworksMockRecorder {
	return m.recorder
}

// CIDRS mocks base method
func (m *MockRelationNetworks) CIDRS() []string {
	ret := m.ctrl.Call(m, "CIDRS")
	ret0, _ := ret[0].([]string)
	return ret0
}

// CIDRS indicates an expected call of CIDRS
func (mr *MockRelationNetworksMockRecorder) CIDRS() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CIDRS", reflect.TypeOf((*MockRelationNetworks)(nil).CIDRS))
}

// Id mocks base method
func (m *MockRelationNetworks) Id() string {
	ret := m.ctrl.Call(m, "Id")
	ret0, _ := ret[0].(string)
	return ret0
}

// Id indicates an expected call of Id
func (mr *MockRelationNetworksMockRecorder) Id() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Id", reflect.TypeOf((*MockRelationNetworks)(nil).Id))
}

// RelationKey mocks base method
func (m *MockRelationNetworks) RelationKey() string {
	ret := m.ctrl.Call(m, "RelationKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// RelationKey indicates an expected call of RelationKey
func (mr *MockRelationNetworksMockRecorder) RelationKey() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RelationKey", reflect.TypeOf((*MockRelationNetworks)(nil).RelationKey))
}
