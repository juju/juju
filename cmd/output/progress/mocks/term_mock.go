// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/cmd/output/progress (interfaces: Terminal)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTerminal is a mock of Terminal interface.
type MockTerminal struct {
	ctrl     *gomock.Controller
	recorder *MockTerminalMockRecorder
}

// MockTerminalMockRecorder is the mock recorder for MockTerminal.
type MockTerminalMockRecorder struct {
	mock *MockTerminal
}

// NewMockTerminal creates a new mock instance.
func NewMockTerminal(ctrl *gomock.Controller) *MockTerminal {
	mock := &MockTerminal{ctrl: ctrl}
	mock.recorder = &MockTerminalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTerminal) EXPECT() *MockTerminalMockRecorder {
	return m.recorder
}

// Width mocks base method.
func (m *MockTerminal) Width() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Width")
	ret0, _ := ret[0].(int)
	return ret0
}

// Width indicates an expected call of Width.
func (mr *MockTerminalMockRecorder) Width() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Width", reflect.TypeOf((*MockTerminal)(nil).Width))
}
