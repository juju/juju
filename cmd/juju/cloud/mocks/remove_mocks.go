// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/cmd/juju/cloud (interfaces: RemoveCloudAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRemoveCloudAPI is a mock of RemoveCloudAPI interface.
type MockRemoveCloudAPI struct {
	ctrl     *gomock.Controller
	recorder *MockRemoveCloudAPIMockRecorder
}

// MockRemoveCloudAPIMockRecorder is the mock recorder for MockRemoveCloudAPI.
type MockRemoveCloudAPIMockRecorder struct {
	mock *MockRemoveCloudAPI
}

// NewMockRemoveCloudAPI creates a new mock instance.
func NewMockRemoveCloudAPI(ctrl *gomock.Controller) *MockRemoveCloudAPI {
	mock := &MockRemoveCloudAPI{ctrl: ctrl}
	mock.recorder = &MockRemoveCloudAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRemoveCloudAPI) EXPECT() *MockRemoveCloudAPIMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockRemoveCloudAPI) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockRemoveCloudAPIMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockRemoveCloudAPI)(nil).Close))
}

// RemoveCloud mocks base method.
func (m *MockRemoveCloudAPI) RemoveCloud(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveCloud", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveCloud indicates an expected call of RemoveCloud.
func (mr *MockRemoveCloudAPIMockRecorder) RemoveCloud(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveCloud", reflect.TypeOf((*MockRemoveCloudAPI)(nil).RemoveCloud), arg0)
}
