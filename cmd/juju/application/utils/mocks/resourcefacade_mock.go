// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/cmd/juju/application/utils (interfaces: ResourceLister)
//
// Generated by this command:
//
//	mockgen -typed -package mocks -destination mocks/resourcefacade_mock.go github.com/juju/juju/cmd/juju/application/utils ResourceLister
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	resource "github.com/juju/juju/core/resource"
	gomock "go.uber.org/mock/gomock"
)

// MockResourceLister is a mock of ResourceLister interface.
type MockResourceLister struct {
	ctrl     *gomock.Controller
	recorder *MockResourceListerMockRecorder
}

// MockResourceListerMockRecorder is the mock recorder for MockResourceLister.
type MockResourceListerMockRecorder struct {
	mock *MockResourceLister
}

// NewMockResourceLister creates a new mock instance.
func NewMockResourceLister(ctrl *gomock.Controller) *MockResourceLister {
	mock := &MockResourceLister{ctrl: ctrl}
	mock.recorder = &MockResourceListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceLister) EXPECT() *MockResourceListerMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockResourceLister) ISGOMOCK() struct{} {
	return struct{}{}
}

// ListResources mocks base method.
func (m *MockResourceLister) ListResources(arg0 context.Context, arg1 []string) ([]resource.ApplicationResources, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListResources", arg0, arg1)
	ret0, _ := ret[0].([]resource.ApplicationResources)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListResources indicates an expected call of ListResources.
func (mr *MockResourceListerMockRecorder) ListResources(arg0, arg1 any) *MockResourceListerListResourcesCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListResources", reflect.TypeOf((*MockResourceLister)(nil).ListResources), arg0, arg1)
	return &MockResourceListerListResourcesCall{Call: call}
}

// MockResourceListerListResourcesCall wrap *gomock.Call
type MockResourceListerListResourcesCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockResourceListerListResourcesCall) Return(arg0 []resource.ApplicationResources, arg1 error) *MockResourceListerListResourcesCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockResourceListerListResourcesCall) Do(f func(context.Context, []string) ([]resource.ApplicationResources, error)) *MockResourceListerListResourcesCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockResourceListerListResourcesCall) DoAndReturn(f func(context.Context, []string) ([]resource.ApplicationResources, error)) *MockResourceListerListResourcesCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
