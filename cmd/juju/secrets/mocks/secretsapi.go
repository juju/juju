// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/cmd/juju/secrets (interfaces: ListSecretsAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	secrets "github.com/juju/juju/api/client/secrets"
)

// MockListSecretsAPI is a mock of ListSecretsAPI interface.
type MockListSecretsAPI struct {
	ctrl     *gomock.Controller
	recorder *MockListSecretsAPIMockRecorder
}

// MockListSecretsAPIMockRecorder is the mock recorder for MockListSecretsAPI.
type MockListSecretsAPIMockRecorder struct {
	mock *MockListSecretsAPI
}

// NewMockListSecretsAPI creates a new mock instance.
func NewMockListSecretsAPI(ctrl *gomock.Controller) *MockListSecretsAPI {
	mock := &MockListSecretsAPI{ctrl: ctrl}
	mock.recorder = &MockListSecretsAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockListSecretsAPI) EXPECT() *MockListSecretsAPIMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockListSecretsAPI) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockListSecretsAPIMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockListSecretsAPI)(nil).Close))
}

// ListSecrets mocks base method.
func (m *MockListSecretsAPI) ListSecrets(arg0 bool) ([]secrets.SecretDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSecrets", arg0)
	ret0, _ := ret[0].([]secrets.SecretDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSecrets indicates an expected call of ListSecrets.
func (mr *MockListSecretsAPIMockRecorder) ListSecrets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSecrets", reflect.TypeOf((*MockListSecretsAPI)(nil).ListSecrets), arg0)
}
