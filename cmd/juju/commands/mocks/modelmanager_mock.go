// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/cmd/juju/commands (interfaces: ModelManagerAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	tools "github.com/juju/juju/tools"
	names "github.com/juju/names/v4"
)

// MockModelManagerAPI is a mock of ModelManagerAPI interface.
type MockModelManagerAPI struct {
	ctrl     *gomock.Controller
	recorder *MockModelManagerAPIMockRecorder
}

// MockModelManagerAPIMockRecorder is the mock recorder for MockModelManagerAPI.
type MockModelManagerAPIMockRecorder struct {
	mock *MockModelManagerAPI
}

// NewMockModelManagerAPI creates a new mock instance.
func NewMockModelManagerAPI(ctrl *gomock.Controller) *MockModelManagerAPI {
	mock := &MockModelManagerAPI{ctrl: ctrl}
	mock.recorder = &MockModelManagerAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockModelManagerAPI) EXPECT() *MockModelManagerAPIMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockModelManagerAPI) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockModelManagerAPIMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockModelManagerAPI)(nil).Close))
}

// ToolVersions mocks base method.
func (m *MockModelManagerAPI) ToolVersions() (tools.List, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToolVersions")
	ret0, _ := ret[0].(tools.List)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ToolVersions indicates an expected call of ToolVersions.
func (mr *MockModelManagerAPIMockRecorder) ToolVersions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToolVersions", reflect.TypeOf((*MockModelManagerAPI)(nil).ToolVersions))
}

// ValidateModelUpgrade mocks base method.
func (m *MockModelManagerAPI) ValidateModelUpgrade(arg0 names.ModelTag, arg1 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateModelUpgrade", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateModelUpgrade indicates an expected call of ValidateModelUpgrade.
func (mr *MockModelManagerAPIMockRecorder) ValidateModelUpgrade(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateModelUpgrade", reflect.TypeOf((*MockModelManagerAPI)(nil).ValidateModelUpgrade), arg0, arg1)
}
