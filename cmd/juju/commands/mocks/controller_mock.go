// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/cmd/juju/commands (interfaces: ControllerAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	controller "github.com/juju/juju/v2/controller"
	cloudspec "github.com/juju/juju/v2/environs/cloudspec"
	names "github.com/juju/names/v4"
)

// MockControllerAPI is a mock of ControllerAPI interface.
type MockControllerAPI struct {
	ctrl     *gomock.Controller
	recorder *MockControllerAPIMockRecorder
}

// MockControllerAPIMockRecorder is the mock recorder for MockControllerAPI.
type MockControllerAPIMockRecorder struct {
	mock *MockControllerAPI
}

// NewMockControllerAPI creates a new mock instance.
func NewMockControllerAPI(ctrl *gomock.Controller) *MockControllerAPI {
	mock := &MockControllerAPI{ctrl: ctrl}
	mock.recorder = &MockControllerAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockControllerAPI) EXPECT() *MockControllerAPIMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockControllerAPI) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockControllerAPIMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockControllerAPI)(nil).Close))
}

// CloudSpec mocks base method.
func (m *MockControllerAPI) CloudSpec(arg0 names.ModelTag) (cloudspec.CloudSpec, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloudSpec", arg0)
	ret0, _ := ret[0].(cloudspec.CloudSpec)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CloudSpec indicates an expected call of CloudSpec.
func (mr *MockControllerAPIMockRecorder) CloudSpec(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloudSpec", reflect.TypeOf((*MockControllerAPI)(nil).CloudSpec), arg0)
}

// ControllerConfig mocks base method.
func (m *MockControllerAPI) ControllerConfig() (controller.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ControllerConfig")
	ret0, _ := ret[0].(controller.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ControllerConfig indicates an expected call of ControllerConfig.
func (mr *MockControllerAPIMockRecorder) ControllerConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ControllerConfig", reflect.TypeOf((*MockControllerAPI)(nil).ControllerConfig))
}

// ModelConfig mocks base method.
func (m *MockControllerAPI) ModelConfig() (map[string]interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModelConfig")
	ret0, _ := ret[0].(map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ModelConfig indicates an expected call of ModelConfig.
func (mr *MockControllerAPIMockRecorder) ModelConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModelConfig", reflect.TypeOf((*MockControllerAPI)(nil).ModelConfig))
}
