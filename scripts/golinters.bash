#!/bin/bash
# Copyright 2013 Canonical Ltd.
# Licensed under the AGPLv3, see LICENCE file for details.
exitstatus=0

OUTPUT_FILE=$(mktemp) || { echo "Failed to create temp file"; exit 1; }
MOCK_HEADER="// Code generated by MockGen. DO NOT EDIT."

# go get the golangci-lint, which will install the binary 
# into $GOPATH/bin
go get -u github.com/golangci/golangci-lint/cmd/golangci-lint

# verify that the golangci-lint exists in the $GOPATH bin
if [ ! -f "$GOPATH/bin/golangci-lint" ]; then
    (>&2 echo "Error: golangci-lint is not installed.")
    exit 1
fi

$GOPATH/bin/golangci-lint run \
    --disable-all \
    --no-config \
    --issues-exit-code=0 \
    --enable=gofmt \
    --enable=goimports \
    --enable=misspell \
    --enable=unconvert \
    --deadline=240s \
    &> $OUTPUT_FILE

# go through each golangci-lint error and check to see if it's related 
# to a mock file.
invalidLines=`cat $OUTPUT_FILE | grep -v '\(.*\/[^\/]*\.go\):[[:digit:]]*:[[:digit:]]*:.*' | wc -l`
if [ $invalidLines -ne 0 ]; then
    # there was a parse error when reading the golangci-lint output
    exitstatus=1
    (>&2 cat $OUTPUT_FILE)
else
    # valid set of lines, go through each and make sure they're valid
    # mock files, if not exit out.
    lines=`wc -l $OUTPUT_FILE | awk '{print $1}'`
    if [ $lines -ne 0 ]; then
        while read p; do
            header=`echo $p | cut -d':' -f1 | xargs head -n1`
            if [ "$header" != "$MOCK_HEADER" ]; then
                exitstatus=1
                (>&2 echo $p)
            fi
        done <$OUTPUT_FILE
    fi
fi
rm $OUTPUT_FILE
exit $exitstatus
