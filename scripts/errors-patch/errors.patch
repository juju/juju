# Patch file for wiring through internal/errors into Juju
@@
var errors identifier
@@
import errors "github.com/juju/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.Trace(...)
+interrors.Capture(...)

@@
var errors identifier
@@
import errors "github.com/juju/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.New(...)
+interrors.New(...)

@@
var errors identifier
@@
import errors "github.com/juju/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.ConstError(...)
+interrors.ConstError(...)

@@
var fmt identifier
@@
import fmt "fmt"
+import interrors "github.com/juju/juju/internal/errors"

-fmt.Errorf(...)
+interrors.Errorf(...)

@@
var errors identifier
var x expression
var fmtStr expression
@@
import errors "github.com/juju/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.Annotatef(x, fmtStr, ...)
+interrors.Errorf(fmtStr + " %w", ..., x)

@@
var errors identifier
var err, errMsg expression
@@
import errors "github.com/juju/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.Annotate(err, errMsg)
+interrors.Errorf(errMsg + " %w", err)

@@
var errors identifier
var errMsg expression
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.NewNotImplemented(nil, errMsg) 
+interrors.Errorf(errMsg + " %w", coreerrors.NotImplemented)

@@
var errors identifier
var fmtStr expression
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.NotSupportedf(fmtStr, ...)
+interrors.Errorf(fmtStr + " %w", ..., coreerrors.NotSupported)

@@
var errors identifier
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"

- errors.NotSupported
+ coreerrors.NotSupported

@@
var errors identifier
var fmtStr expression
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.NotFoundf(fmtStr, ...)
+interrors.Errorf(fmtStr + " %w", ..., coreerrors.NotFound)

@@
var errors identifier
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"

- errors.NotFound
+ coreerrors.NotFound

@@
var errors identifier
var fmtStr expression
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.NotYetAvailablef(fmtStr, ...)
+interrors.Errorf(fmtStr + " %w", ..., coreerrors.NotYetAvailable)

@@
var errors identifier
var fmtStr expression
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.NotValidf(fmtStr, ...)
+interrors.Errorf(fmtStr + " %w", ..., coreerrors.NotValid)

@@
var errors identifier
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"

- errors.NotValid
+ coreerrors.NotValid

@@
var errors identifier
var fmtStr expression
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.AlreadyExistsf(fmtStr, ...)
+interrors.Errorf(fmtStr + " %w", ..., coreerrors.AlreadyExists)

@@
var errors identifier
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"

- errors.AlreadyExists
+ coreerrors.AlreadyExists

@@
var errors identifier
var fmtStr expression
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.NotImplementedf(fmtStr, ...)
+interrors.Errorf(fmtStr + " %w", ..., coreerrors.NotImplemented)

@@
var errors identifier
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"

- errors.NotImplemented
+ coreerrors.NotImplemented

@@
var errors identifier
var fmtStr expression
@@
import errors "github.com/juju/errors"

+import coreerrors "github.com/juju/juju/core/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.NotProvisionedf(fmtStr, ...)
+interrors.Errorf(fmtStr + " %w", ..., coreerrors.NotProvisioned)

@@
var errors identifier
@@
import errors "github.com/juju/errors"
+import coreerrors "github.com/juju/juju/core/errors"

- errors.NotProvisioned
+ coreerrors.NotProvisioned

@@
var errors identifier
var x expression
@@
import errors "github.com/juju/errors"

-errors.Cause(x)
+x
@@
var errors identifier
@@
import errors "github.com/juju/errors"
+ import interrors "github.com/juju/juju/internal/errors"

-errors.As(...)
+interrors.As(...)

@@
var errors identifier
@@
import errors "github.com/juju/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.Is(...)
+interrors.Is(...)

@@
var errors identifier
@@
import errors "errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.Join(...)
+interrors.Join(...)

@@
var errors identifier
@@
import errors "github.com/juju/errors"
+import interrors "github.com/juju/juju/internal/errors"

-errors.Errorf(...)
+interrors.Errorf(...)

@@
var x, y identifier
var z expression
@@
-x.Errorf(..., y.Hide(z))
+x.Errorf(...).Add(z)