// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/container/lxd (interfaces: SnapManager)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSnapManager is a mock of SnapManager interface.
type MockSnapManager struct {
	ctrl     *gomock.Controller
	recorder *MockSnapManagerMockRecorder
}

// MockSnapManagerMockRecorder is the mock recorder for MockSnapManager.
type MockSnapManagerMockRecorder struct {
	mock *MockSnapManager
}

// NewMockSnapManager creates a new mock instance.
func NewMockSnapManager(ctrl *gomock.Controller) *MockSnapManager {
	mock := &MockSnapManager{ctrl: ctrl}
	mock.recorder = &MockSnapManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSnapManager) EXPECT() *MockSnapManagerMockRecorder {
	return m.recorder
}

// ChangeChannel mocks base method.
func (m *MockSnapManager) ChangeChannel(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeChannel", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeChannel indicates an expected call of ChangeChannel.
func (mr *MockSnapManagerMockRecorder) ChangeChannel(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeChannel", reflect.TypeOf((*MockSnapManager)(nil).ChangeChannel), arg0, arg1)
}

// InstalledChannel mocks base method.
func (m *MockSnapManager) InstalledChannel(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InstalledChannel", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// InstalledChannel indicates an expected call of InstalledChannel.
func (mr *MockSnapManagerMockRecorder) InstalledChannel(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InstalledChannel", reflect.TypeOf((*MockSnapManager)(nil).InstalledChannel), arg0)
}
