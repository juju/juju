name: "Static Analysis"
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:
permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Find required go version
      id: go-version
      run: |
        set -euxo pipefail
        echo "::set-output name=version::$(grep '^go ' go.mod | awk '{print $2}')"

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ steps.go-version.outputs.version }}
      id: go

    - name: Install Dependencies
      run: |
        echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.46.2
        sudo snap install shfmt
        sudo apt install expect
    
    - name: Download Dependencies
      run: go mod download

    - name: "Static Analysis: Copyright"
      run: |
        STATIC_ANALYSIS_JOB=test_copyright make static-analysis
      shell: bash

    - name: "Static Analysis: Shell Check"
      run: |
        STATIC_ANALYSIS_JOB=test_static_analysis_shell make static-analysis
      shell: bash

    - name: "Static Analysis: Go Check"
      run: |
        # Explicitly set GOROOT to avoid golangci-lint/issues/3107
        export "GOROOT=$(go env GOROOT)"
        STATIC_ANALYSIS_JOB=test_static_analysis_go make static-analysis
      shell: bash

    - name: "Static Analysis: Python Check"
      run: |
        STATIC_ANALYSIS_JOB=test_static_analysis_python make static-analysis
      shell: bash

  schema:
    name: Schema
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Find required go version
      id: go-version
      run: |
        set -euxo pipefail
        echo "::set-output name=version::$(grep '^go ' go.mod | awk '{print $2}')"

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ steps.go-version.outputs.version }}
      id: go

    - name: Schema Check
      run: |
        STATIC_ANALYSIS_JOB=test_schema make static-analysis
      shell: bash
