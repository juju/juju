name: "Build"
on:
  push:
    paths-ignore:
      - 'acceptancetests/**'
      - 'doc/**'
      - 'snap/**'
      - 'testcharms/**'
      - 'testing/**'
      - 'tests/**'
  pull_request:
    paths-ignore:
      - 'acceptancetests/**'
      - 'doc/**'
      - 'snap/**'
      - 'testcharms/**'
      - 'testing/**'
      - 'tests/**'

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        platform:
           - { os: linux, arch: amd64 }
           - { os: linux, arch: arm64 }
           - { os: linux, arch: s390x }
           - { os: linux, arch: ppc64le }
           - { os: windows, arch: amd64 }
           - { os: darwin, arch: amd64 }

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Find required go version
      id: go-version
      run: |
        set -euxo pipefail
        echo "::set-output name=version::$(grep '^go ' go.mod | awk '{print $2}')"

    - name: Set up Go
      uses: actions/setup-go@v2.1.4
      with:
        go-version: ${{ steps.go-version.outputs.version }}
      id: go

    - name: Build
      run: |
        GOOS=${{ matrix.platform.os }} GOARCH=${{ matrix.platform.arch }} make go-install
