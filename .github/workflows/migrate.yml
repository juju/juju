name: "Migrate"
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - '**.go'
      - 'go.mod'
      - 'snap/**'
      - '.github/workflows/migrate.yml'
      - 'scripts/dqlite/**'
      - 'Makefile'
      - 'make_functions.sh'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  migrate:
    name: Migrate
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        # TODO: add microk8s tests
        cloud: ["lxd"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup LXD
        if: matrix.cloud == 'lxd'
        uses: canonical/setup-lxd@4e959f8e0d9c5feb27d44c5e4d9a330a782edee0

      - name: Install Juju 3.0
        run: sudo snap install juju --channel 3.0/stable

      - name: Bootstrap a 3.0 controller and model
        run: |
          juju bootstrap lxd test30
          juju add-model default
          juju deploy ubuntu
          
          # TODO: use juju-restore
          # TODO: add users/permissions/models and test that those migrate over

      - name: Set up Go
        uses: actions/setup-go@v4

      - name: Set up Go env
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Upgrade client to 3.1
        run: |
          sudo snap remove juju --purge
          make go-install &>/dev/null

      - name: Bootstrap 3.1 controller
        run: |
          juju bootstrap lxd test31
          juju switch controller
          juju wait-for application controller

        # TODO: create backup and juju restore

      - name: Migrate default model to 3.1 controller
        run: |
          juju switch test30
          
          # Ensure application is fully deployed
          juju wait-for application ubuntu
          
          # Wait a few secs for the machine status to update
          # so that migration prechecks pass.
          sleep 10
          
          juju migrate default test31

      - name: Check the migration was successful
        run: |
          set -x
          juju switch test31
          
          # Wait for 'default' model to come through
          attempt=0
          while true; do
            RES=$(juju models | grep 'default' || true)
            if [[ -n $RES ]]; then
              break
            fi
            sleep 5
            attempt=$((attempt+1))
            if [ "$attempt" -eq 10 ]; then
              echo "Migration timed out"
              exit 1
            fi
          done
          
          juju switch default
          juju wait-for application ubuntu
