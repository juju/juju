name: "Generate"
on:
  push:
    paths-ignore:
      - 'acceptancetests/**'
      - 'doc/**'
      - 'snap/**'
      - 'testcharms/**'
      - 'testing/**'
      - 'tests/**'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - 'acceptancetests/**'
      - 'doc/**'
      - 'snap/**'
      - 'testcharms/**'
      - 'testing/**'
      - 'tests/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  Generate:
    name: Generate
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Find required go version
        id: go-version
        run: |
          set -euxo pipefail
          echo "::set-output name=version::$(grep '^go ' go.mod | awk '{print $2}')"

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ steps.go-version.outputs.version }}
        id: go

      - name: go get dependencies
        run: go get ./...

      - name: Delete all mocks
        shell: bash
        run: |
          for FILE in $(grep '// Code generated by MockGen. DO NOT EDIT.' -r . -l --include \*.go); do
            rm $FILE
          done

      - name: Regenerate code
        shell: bash
        run: go generate -x ./...

      - name: Check diff
        if: success() || failure()
        shell: bash
        run: |
          git add -A
          if [[ -n $(git diff HEAD) ]]; then
            echo "*****"
            echo "The following generated files have been modified:"
            git diff --name-status HEAD
            echo "Please regenerate these files and check in the changes."
            echo "*****"
            exit 1
          fi
