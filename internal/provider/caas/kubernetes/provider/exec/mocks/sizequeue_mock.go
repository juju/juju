// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/caas/kubernetes/provider/exec (interfaces: SizeGetter)
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/sizequeue_mock.go github.com/juju/juju/caas/kubernetes/provider/exec SizeGetter
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	remotecommand "k8s.io/client-go/tools/remotecommand"
)

// MockSizeGetter is a mock of SizeGetter interface.
type MockSizeGetter struct {
	ctrl     *gomock.Controller
	recorder *MockSizeGetterMockRecorder
}

// MockSizeGetterMockRecorder is the mock recorder for MockSizeGetter.
type MockSizeGetterMockRecorder struct {
	mock *MockSizeGetter
}

// NewMockSizeGetter creates a new mock instance.
func NewMockSizeGetter(ctrl *gomock.Controller) *MockSizeGetter {
	mock := &MockSizeGetter{ctrl: ctrl}
	mock.recorder = &MockSizeGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSizeGetter) EXPECT() *MockSizeGetterMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockSizeGetter) Get(arg0 int) *remotecommand.TerminalSize {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*remotecommand.TerminalSize)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockSizeGetterMockRecorder) Get(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSizeGetter)(nil).Get), arg0)
}
