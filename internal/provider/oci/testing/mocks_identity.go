// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/internal/provider/oci (interfaces: IdentityClient)
//
// Generated by this command:
//
//	mockgen -typed -package testing -destination testing/mocks_identity.go -write_package_comment=false github.com/juju/juju/internal/provider/oci IdentityClient
//

package testing

import (
	context "context"
	reflect "reflect"

	identity "github.com/oracle/oci-go-sdk/v65/identity"
	gomock "go.uber.org/mock/gomock"
)

// MockIdentityClient is a mock of IdentityClient interface.
type MockIdentityClient struct {
	ctrl     *gomock.Controller
	recorder *MockIdentityClientMockRecorder
}

// MockIdentityClientMockRecorder is the mock recorder for MockIdentityClient.
type MockIdentityClientMockRecorder struct {
	mock *MockIdentityClient
}

// NewMockIdentityClient creates a new mock instance.
func NewMockIdentityClient(ctrl *gomock.Controller) *MockIdentityClient {
	mock := &MockIdentityClient{ctrl: ctrl}
	mock.recorder = &MockIdentityClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIdentityClient) EXPECT() *MockIdentityClientMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockIdentityClient) ISGOMOCK() struct{} {
	return struct{}{}
}

// ListAvailabilityDomains mocks base method.
func (m *MockIdentityClient) ListAvailabilityDomains(arg0 context.Context, arg1 identity.ListAvailabilityDomainsRequest) (identity.ListAvailabilityDomainsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAvailabilityDomains", arg0, arg1)
	ret0, _ := ret[0].(identity.ListAvailabilityDomainsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAvailabilityDomains indicates an expected call of ListAvailabilityDomains.
func (mr *MockIdentityClientMockRecorder) ListAvailabilityDomains(arg0, arg1 any) *MockIdentityClientListAvailabilityDomainsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAvailabilityDomains", reflect.TypeOf((*MockIdentityClient)(nil).ListAvailabilityDomains), arg0, arg1)
	return &MockIdentityClientListAvailabilityDomainsCall{Call: call}
}

// MockIdentityClientListAvailabilityDomainsCall wrap *gomock.Call
type MockIdentityClientListAvailabilityDomainsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockIdentityClientListAvailabilityDomainsCall) Return(arg0 identity.ListAvailabilityDomainsResponse, arg1 error) *MockIdentityClientListAvailabilityDomainsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockIdentityClientListAvailabilityDomainsCall) Do(f func(context.Context, identity.ListAvailabilityDomainsRequest) (identity.ListAvailabilityDomainsResponse, error)) *MockIdentityClientListAvailabilityDomainsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockIdentityClientListAvailabilityDomainsCall) DoAndReturn(f func(context.Context, identity.ListAvailabilityDomainsRequest) (identity.ListAvailabilityDomainsResponse, error)) *MockIdentityClientListAvailabilityDomainsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
