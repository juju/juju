// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/internal/worker/uniter/relation (interfaces: SubordinateDestroyer)
//
// Generated by this command:
//
//	mockgen -typed -package mocks -destination mocks/mock_subordinate_destroyer.go github.com/juju/juju/internal/worker/uniter/relation SubordinateDestroyer
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSubordinateDestroyer is a mock of SubordinateDestroyer interface.
type MockSubordinateDestroyer struct {
	ctrl     *gomock.Controller
	recorder *MockSubordinateDestroyerMockRecorder
}

// MockSubordinateDestroyerMockRecorder is the mock recorder for MockSubordinateDestroyer.
type MockSubordinateDestroyerMockRecorder struct {
	mock *MockSubordinateDestroyer
}

// NewMockSubordinateDestroyer creates a new mock instance.
func NewMockSubordinateDestroyer(ctrl *gomock.Controller) *MockSubordinateDestroyer {
	mock := &MockSubordinateDestroyer{ctrl: ctrl}
	mock.recorder = &MockSubordinateDestroyerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSubordinateDestroyer) EXPECT() *MockSubordinateDestroyerMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockSubordinateDestroyer) ISGOMOCK() struct{} {
	return struct{}{}
}

// DestroyAllSubordinates mocks base method.
func (m *MockSubordinateDestroyer) DestroyAllSubordinates(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DestroyAllSubordinates", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DestroyAllSubordinates indicates an expected call of DestroyAllSubordinates.
func (mr *MockSubordinateDestroyerMockRecorder) DestroyAllSubordinates(arg0 any) *MockSubordinateDestroyerDestroyAllSubordinatesCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroyAllSubordinates", reflect.TypeOf((*MockSubordinateDestroyer)(nil).DestroyAllSubordinates), arg0)
	return &MockSubordinateDestroyerDestroyAllSubordinatesCall{Call: call}
}

// MockSubordinateDestroyerDestroyAllSubordinatesCall wrap *gomock.Call
type MockSubordinateDestroyerDestroyAllSubordinatesCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockSubordinateDestroyerDestroyAllSubordinatesCall) Return(arg0 error) *MockSubordinateDestroyerDestroyAllSubordinatesCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockSubordinateDestroyerDestroyAllSubordinatesCall) Do(f func(context.Context) error) *MockSubordinateDestroyerDestroyAllSubordinatesCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockSubordinateDestroyerDestroyAllSubordinatesCall) DoAndReturn(f func(context.Context) error) *MockSubordinateDestroyerDestroyAllSubordinatesCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
