// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/internal/worker/authenticationworker (interfaces: EphemeralKeysUpdater)
//
// Generated by this command:
//
//	mockgen -package sshsession -destination ./ephemeral_keys_updater_mock_test.go github.com/juju/juju/internal/worker/authenticationworker EphemeralKeysUpdater
//

// Package sshsession is a generated GoMock package.
package sshsession

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	ssh "golang.org/x/crypto/ssh"
)

// MockEphemeralKeysUpdater is a mock of EphemeralKeysUpdater interface.
type MockEphemeralKeysUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockEphemeralKeysUpdaterMockRecorder
}

// MockEphemeralKeysUpdaterMockRecorder is the mock recorder for MockEphemeralKeysUpdater.
type MockEphemeralKeysUpdaterMockRecorder struct {
	mock *MockEphemeralKeysUpdater
}

// NewMockEphemeralKeysUpdater creates a new mock instance.
func NewMockEphemeralKeysUpdater(ctrl *gomock.Controller) *MockEphemeralKeysUpdater {
	mock := &MockEphemeralKeysUpdater{ctrl: ctrl}
	mock.recorder = &MockEphemeralKeysUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEphemeralKeysUpdater) EXPECT() *MockEphemeralKeysUpdaterMockRecorder {
	return m.recorder
}

// AddEphemeralKey mocks base method.
func (m *MockEphemeralKeysUpdater) AddEphemeralKey(arg0 ssh.PublicKey, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddEphemeralKey", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddEphemeralKey indicates an expected call of AddEphemeralKey.
func (mr *MockEphemeralKeysUpdaterMockRecorder) AddEphemeralKey(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddEphemeralKey", reflect.TypeOf((*MockEphemeralKeysUpdater)(nil).AddEphemeralKey), arg0, arg1)
}

// RemoveEphemeralKey mocks base method.
func (m *MockEphemeralKeysUpdater) RemoveEphemeralKey(arg0 ssh.PublicKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveEphemeralKey", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveEphemeralKey indicates an expected call of RemoveEphemeralKey.
func (mr *MockEphemeralKeysUpdaterMockRecorder) RemoveEphemeralKey(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveEphemeralKey", reflect.TypeOf((*MockEphemeralKeysUpdater)(nil).RemoveEphemeralKey), arg0)
}
