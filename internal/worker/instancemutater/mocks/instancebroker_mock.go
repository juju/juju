// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/internal/worker/instancemutater (interfaces: InstanceMutaterAPI)
//
// Generated by this command:
//
//	mockgen -typed -package mocks -destination mocks/instancebroker_mock.go github.com/juju/juju/internal/worker/instancemutater InstanceMutaterAPI
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	instancemutater "github.com/juju/juju/api/agent/instancemutater"
	watcher "github.com/juju/juju/core/watcher"
	names "github.com/juju/names/v6"
	gomock "go.uber.org/mock/gomock"
)

// MockInstanceMutaterAPI is a mock of InstanceMutaterAPI interface.
type MockInstanceMutaterAPI struct {
	ctrl     *gomock.Controller
	recorder *MockInstanceMutaterAPIMockRecorder
}

// MockInstanceMutaterAPIMockRecorder is the mock recorder for MockInstanceMutaterAPI.
type MockInstanceMutaterAPIMockRecorder struct {
	mock *MockInstanceMutaterAPI
}

// NewMockInstanceMutaterAPI creates a new mock instance.
func NewMockInstanceMutaterAPI(ctrl *gomock.Controller) *MockInstanceMutaterAPI {
	mock := &MockInstanceMutaterAPI{ctrl: ctrl}
	mock.recorder = &MockInstanceMutaterAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInstanceMutaterAPI) EXPECT() *MockInstanceMutaterAPIMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockInstanceMutaterAPI) ISGOMOCK() struct{} {
	return struct{}{}
}

// Machine mocks base method.
func (m *MockInstanceMutaterAPI) Machine(arg0 context.Context, arg1 names.MachineTag) (instancemutater.MutaterMachine, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Machine", arg0, arg1)
	ret0, _ := ret[0].(instancemutater.MutaterMachine)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Machine indicates an expected call of Machine.
func (mr *MockInstanceMutaterAPIMockRecorder) Machine(arg0, arg1 any) *MockInstanceMutaterAPIMachineCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Machine", reflect.TypeOf((*MockInstanceMutaterAPI)(nil).Machine), arg0, arg1)
	return &MockInstanceMutaterAPIMachineCall{Call: call}
}

// MockInstanceMutaterAPIMachineCall wrap *gomock.Call
type MockInstanceMutaterAPIMachineCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockInstanceMutaterAPIMachineCall) Return(arg0 instancemutater.MutaterMachine, arg1 error) *MockInstanceMutaterAPIMachineCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockInstanceMutaterAPIMachineCall) Do(f func(context.Context, names.MachineTag) (instancemutater.MutaterMachine, error)) *MockInstanceMutaterAPIMachineCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockInstanceMutaterAPIMachineCall) DoAndReturn(f func(context.Context, names.MachineTag) (instancemutater.MutaterMachine, error)) *MockInstanceMutaterAPIMachineCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// WatchModelMachines mocks base method.
func (m *MockInstanceMutaterAPI) WatchModelMachines(arg0 context.Context) (watcher.Watcher[[]string], error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WatchModelMachines", arg0)
	ret0, _ := ret[0].(watcher.Watcher[[]string])
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WatchModelMachines indicates an expected call of WatchModelMachines.
func (mr *MockInstanceMutaterAPIMockRecorder) WatchModelMachines(arg0 any) *MockInstanceMutaterAPIWatchModelMachinesCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WatchModelMachines", reflect.TypeOf((*MockInstanceMutaterAPI)(nil).WatchModelMachines), arg0)
	return &MockInstanceMutaterAPIWatchModelMachinesCall{Call: call}
}

// MockInstanceMutaterAPIWatchModelMachinesCall wrap *gomock.Call
type MockInstanceMutaterAPIWatchModelMachinesCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockInstanceMutaterAPIWatchModelMachinesCall) Return(arg0 watcher.Watcher[[]string], arg1 error) *MockInstanceMutaterAPIWatchModelMachinesCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockInstanceMutaterAPIWatchModelMachinesCall) Do(f func(context.Context) (watcher.Watcher[[]string], error)) *MockInstanceMutaterAPIWatchModelMachinesCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockInstanceMutaterAPIWatchModelMachinesCall) DoAndReturn(f func(context.Context) (watcher.Watcher[[]string], error)) *MockInstanceMutaterAPIWatchModelMachinesCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
