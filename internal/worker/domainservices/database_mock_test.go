// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/core/database (interfaces: DBDeleter)
//
// Generated by this command:
//
//	mockgen -typed -package domainservices -destination database_mock_test.go github.com/juju/juju/core/database DBDeleter
//

// Package domainservices is a generated GoMock package.
package domainservices

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDBDeleter is a mock of DBDeleter interface.
type MockDBDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockDBDeleterMockRecorder
}

// MockDBDeleterMockRecorder is the mock recorder for MockDBDeleter.
type MockDBDeleterMockRecorder struct {
	mock *MockDBDeleter
}

// NewMockDBDeleter creates a new mock instance.
func NewMockDBDeleter(ctrl *gomock.Controller) *MockDBDeleter {
	mock := &MockDBDeleter{ctrl: ctrl}
	mock.recorder = &MockDBDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDBDeleter) EXPECT() *MockDBDeleterMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockDBDeleter) ISGOMOCK() struct{} {
	return struct{}{}
}

// DeleteDB mocks base method.
func (m *MockDBDeleter) DeleteDB(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDB", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDB indicates an expected call of DeleteDB.
func (mr *MockDBDeleterMockRecorder) DeleteDB(arg0 any) *MockDBDeleterDeleteDBCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDB", reflect.TypeOf((*MockDBDeleter)(nil).DeleteDB), arg0)
	return &MockDBDeleterDeleteDBCall{Call: call}
}

// MockDBDeleterDeleteDBCall wrap *gomock.Call
type MockDBDeleterDeleteDBCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockDBDeleterDeleteDBCall) Return(arg0 error) *MockDBDeleterDeleteDBCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockDBDeleterDeleteDBCall) Do(f func(string) error) *MockDBDeleterDeleteDBCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockDBDeleterDeleteDBCall) DoAndReturn(f func(string) error) *MockDBDeleterDeleteDBCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
