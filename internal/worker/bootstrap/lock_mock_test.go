// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/internal/worker/gate (interfaces: Unlocker)
//
// Generated by this command:
//
//	mockgen -typed -package bootstrap -destination lock_mock_test.go github.com/juju/juju/internal/worker/gate Unlocker
//

// Package bootstrap is a generated GoMock package.
package bootstrap

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUnlocker is a mock of Unlocker interface.
type MockUnlocker struct {
	ctrl     *gomock.Controller
	recorder *MockUnlockerMockRecorder
}

// MockUnlockerMockRecorder is the mock recorder for MockUnlocker.
type MockUnlockerMockRecorder struct {
	mock *MockUnlocker
}

// NewMockUnlocker creates a new mock instance.
func NewMockUnlocker(ctrl *gomock.Controller) *MockUnlocker {
	mock := &MockUnlocker{ctrl: ctrl}
	mock.recorder = &MockUnlockerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnlocker) EXPECT() *MockUnlockerMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockUnlocker) ISGOMOCK() struct{} {
	return struct{}{}
}

// Unlock mocks base method.
func (m *MockUnlocker) Unlock() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Unlock")
}

// Unlock indicates an expected call of Unlock.
func (mr *MockUnlockerMockRecorder) Unlock() *MockUnlockerUnlockCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unlock", reflect.TypeOf((*MockUnlocker)(nil).Unlock))
	return &MockUnlockerUnlockCall{Call: call}
}

// MockUnlockerUnlockCall wrap *gomock.Call
type MockUnlockerUnlockCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockUnlockerUnlockCall) Return() *MockUnlockerUnlockCall {
	c.Call = c.Call.Return()
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockUnlockerUnlockCall) Do(f func()) *MockUnlockerUnlockCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockUnlockerUnlockCall) DoAndReturn(f func()) *MockUnlockerUnlockCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
