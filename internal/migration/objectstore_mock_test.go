// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/core/objectstore (interfaces: ModelObjectStoreGetter)
//
// Generated by this command:
//
//	mockgen -typed -package migration_test -destination objectstore_mock_test.go github.com/juju/juju/core/objectstore ModelObjectStoreGetter
//

// Package migration_test is a generated GoMock package.
package migration_test

import (
	context "context"
	reflect "reflect"

	objectstore "github.com/juju/juju/core/objectstore"
	gomock "go.uber.org/mock/gomock"
)

// MockModelObjectStoreGetter is a mock of ModelObjectStoreGetter interface.
type MockModelObjectStoreGetter struct {
	ctrl     *gomock.Controller
	recorder *MockModelObjectStoreGetterMockRecorder
}

// MockModelObjectStoreGetterMockRecorder is the mock recorder for MockModelObjectStoreGetter.
type MockModelObjectStoreGetterMockRecorder struct {
	mock *MockModelObjectStoreGetter
}

// NewMockModelObjectStoreGetter creates a new mock instance.
func NewMockModelObjectStoreGetter(ctrl *gomock.Controller) *MockModelObjectStoreGetter {
	mock := &MockModelObjectStoreGetter{ctrl: ctrl}
	mock.recorder = &MockModelObjectStoreGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockModelObjectStoreGetter) EXPECT() *MockModelObjectStoreGetterMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockModelObjectStoreGetter) ISGOMOCK() struct{} {
	return struct{}{}
}

// GetObjectStore mocks base method.
func (m *MockModelObjectStoreGetter) GetObjectStore(arg0 context.Context) (objectstore.ObjectStore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjectStore", arg0)
	ret0, _ := ret[0].(objectstore.ObjectStore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObjectStore indicates an expected call of GetObjectStore.
func (mr *MockModelObjectStoreGetterMockRecorder) GetObjectStore(arg0 any) *MockModelObjectStoreGetterGetObjectStoreCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjectStore", reflect.TypeOf((*MockModelObjectStoreGetter)(nil).GetObjectStore), arg0)
	return &MockModelObjectStoreGetterGetObjectStoreCall{Call: call}
}

// MockModelObjectStoreGetterGetObjectStoreCall wrap *gomock.Call
type MockModelObjectStoreGetterGetObjectStoreCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockModelObjectStoreGetterGetObjectStoreCall) Return(arg0 objectstore.ObjectStore, arg1 error) *MockModelObjectStoreGetterGetObjectStoreCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockModelObjectStoreGetterGetObjectStoreCall) Do(f func(context.Context) (objectstore.ObjectStore, error)) *MockModelObjectStoreGetterGetObjectStoreCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockModelObjectStoreGetterGetObjectStoreCall) DoAndReturn(f func(context.Context) (objectstore.ObjectStore, error)) *MockModelObjectStoreGetterGetObjectStoreCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
