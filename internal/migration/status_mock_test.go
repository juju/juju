// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/core/status (interfaces: StatusHistoryFactory,StatusHistorySetter)
//
// Generated by this command:
//
//	mockgen -package migration_test -destination status_mock_test.go github.com/juju/juju/core/status StatusHistoryFactory,StatusHistorySetter
//

// Package migration_test is a generated GoMock package.
package migration_test

import (
	reflect "reflect"

	status "github.com/juju/juju/core/status"
	gomock "go.uber.org/mock/gomock"
)

// MockStatusHistoryFactory is a mock of StatusHistoryFactory interface.
type MockStatusHistoryFactory struct {
	ctrl     *gomock.Controller
	recorder *MockStatusHistoryFactoryMockRecorder
}

// MockStatusHistoryFactoryMockRecorder is the mock recorder for MockStatusHistoryFactory.
type MockStatusHistoryFactoryMockRecorder struct {
	mock *MockStatusHistoryFactory
}

// NewMockStatusHistoryFactory creates a new mock instance.
func NewMockStatusHistoryFactory(ctrl *gomock.Controller) *MockStatusHistoryFactory {
	mock := &MockStatusHistoryFactory{ctrl: ctrl}
	mock.recorder = &MockStatusHistoryFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatusHistoryFactory) EXPECT() *MockStatusHistoryFactoryMockRecorder {
	return m.recorder
}

// StatusHistorySetterForModel mocks base method.
func (m *MockStatusHistoryFactory) StatusHistorySetterForModel(arg0 string) status.StatusHistorySetter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StatusHistorySetterForModel", arg0)
	ret0, _ := ret[0].(status.StatusHistorySetter)
	return ret0
}

// StatusHistorySetterForModel indicates an expected call of StatusHistorySetterForModel.
func (mr *MockStatusHistoryFactoryMockRecorder) StatusHistorySetterForModel(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StatusHistorySetterForModel", reflect.TypeOf((*MockStatusHistoryFactory)(nil).StatusHistorySetterForModel), arg0)
}

// MockStatusHistorySetter is a mock of StatusHistorySetter interface.
type MockStatusHistorySetter struct {
	ctrl     *gomock.Controller
	recorder *MockStatusHistorySetterMockRecorder
}

// MockStatusHistorySetterMockRecorder is the mock recorder for MockStatusHistorySetter.
type MockStatusHistorySetterMockRecorder struct {
	mock *MockStatusHistorySetter
}

// NewMockStatusHistorySetter creates a new mock instance.
func NewMockStatusHistorySetter(ctrl *gomock.Controller) *MockStatusHistorySetter {
	mock := &MockStatusHistorySetter{ctrl: ctrl}
	mock.recorder = &MockStatusHistorySetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatusHistorySetter) EXPECT() *MockStatusHistorySetterMockRecorder {
	return m.recorder
}

// SetStatusHistory mocks base method.
func (m *MockStatusHistorySetter) SetStatusHistory(arg0 status.HistoryKind, arg1 status.Status, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetStatusHistory", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetStatusHistory indicates an expected call of SetStatusHistory.
func (mr *MockStatusHistorySetterMockRecorder) SetStatusHistory(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetStatusHistory", reflect.TypeOf((*MockStatusHistorySetter)(nil).SetStatusHistory), arg0, arg1, arg2)
}
