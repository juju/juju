// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/internal/docker/registry/internal (interfaces: ArchitectureGetter)
//
// Generated by this command:
//
//	mockgen -typed -package mocks -destination mocks/manifests_mock.go github.com/juju/juju/internal/docker/registry/internal ArchitectureGetter
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	internal "github.com/juju/juju/internal/docker/registry/internal"
	gomock "go.uber.org/mock/gomock"
)

// MockArchitectureGetter is a mock of ArchitectureGetter interface.
type MockArchitectureGetter struct {
	ctrl     *gomock.Controller
	recorder *MockArchitectureGetterMockRecorder
}

// MockArchitectureGetterMockRecorder is the mock recorder for MockArchitectureGetter.
type MockArchitectureGetterMockRecorder struct {
	mock *MockArchitectureGetter
}

// NewMockArchitectureGetter creates a new mock instance.
func NewMockArchitectureGetter(ctrl *gomock.Controller) *MockArchitectureGetter {
	mock := &MockArchitectureGetter{ctrl: ctrl}
	mock.recorder = &MockArchitectureGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArchitectureGetter) EXPECT() *MockArchitectureGetterMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockArchitectureGetter) ISGOMOCK() struct{} {
	return struct{}{}
}

// GetBlobs mocks base method.
func (m *MockArchitectureGetter) GetBlobs(arg0, arg1 string) (*internal.BlobsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlobs", arg0, arg1)
	ret0, _ := ret[0].(*internal.BlobsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlobs indicates an expected call of GetBlobs.
func (mr *MockArchitectureGetterMockRecorder) GetBlobs(arg0, arg1 any) *MockArchitectureGetterGetBlobsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlobs", reflect.TypeOf((*MockArchitectureGetter)(nil).GetBlobs), arg0, arg1)
	return &MockArchitectureGetterGetBlobsCall{Call: call}
}

// MockArchitectureGetterGetBlobsCall wrap *gomock.Call
type MockArchitectureGetterGetBlobsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockArchitectureGetterGetBlobsCall) Return(arg0 *internal.BlobsResponse, arg1 error) *MockArchitectureGetterGetBlobsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockArchitectureGetterGetBlobsCall) Do(f func(string, string) (*internal.BlobsResponse, error)) *MockArchitectureGetterGetBlobsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockArchitectureGetterGetBlobsCall) DoAndReturn(f func(string, string) (*internal.BlobsResponse, error)) *MockArchitectureGetterGetBlobsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// GetManifests mocks base method.
func (m *MockArchitectureGetter) GetManifests(arg0, arg1 string) (*internal.ManifestsResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetManifests", arg0, arg1)
	ret0, _ := ret[0].(*internal.ManifestsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetManifests indicates an expected call of GetManifests.
func (mr *MockArchitectureGetterMockRecorder) GetManifests(arg0, arg1 any) *MockArchitectureGetterGetManifestsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetManifests", reflect.TypeOf((*MockArchitectureGetter)(nil).GetManifests), arg0, arg1)
	return &MockArchitectureGetterGetManifestsCall{Call: call}
}

// MockArchitectureGetterGetManifestsCall wrap *gomock.Call
type MockArchitectureGetterGetManifestsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockArchitectureGetterGetManifestsCall) Return(arg0 *internal.ManifestsResult, arg1 error) *MockArchitectureGetterGetManifestsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockArchitectureGetterGetManifestsCall) Do(f func(string, string) (*internal.ManifestsResult, error)) *MockArchitectureGetterGetManifestsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockArchitectureGetterGetManifestsCall) DoAndReturn(f func(string, string) (*internal.ManifestsResult, error)) *MockArchitectureGetterGetManifestsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
