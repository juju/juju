// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/worker/uniter/relation (interfaces: UnitGetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	relation "github.com/juju/juju/worker/uniter/relation"
	names "github.com/juju/names/v4"
)

// MockUnitGetter is a mock of UnitGetter interface.
type MockUnitGetter struct {
	ctrl     *gomock.Controller
	recorder *MockUnitGetterMockRecorder
}

// MockUnitGetterMockRecorder is the mock recorder for MockUnitGetter.
type MockUnitGetterMockRecorder struct {
	mock *MockUnitGetter
}

// NewMockUnitGetter creates a new mock instance.
func NewMockUnitGetter(ctrl *gomock.Controller) *MockUnitGetter {
	mock := &MockUnitGetter{ctrl: ctrl}
	mock.recorder = &MockUnitGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnitGetter) EXPECT() *MockUnitGetterMockRecorder {
	return m.recorder
}

// Unit mocks base method.
func (m *MockUnitGetter) Unit(arg0 names.UnitTag) (relation.Unit, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Unit", arg0)
	ret0, _ := ret[0].(relation.Unit)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Unit indicates an expected call of Unit.
func (mr *MockUnitGetterMockRecorder) Unit(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unit", reflect.TypeOf((*MockUnitGetter)(nil).Unit), arg0)
}
