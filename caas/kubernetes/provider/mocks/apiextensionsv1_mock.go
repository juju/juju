// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset/typed/apiextensions/v1 (interfaces: ApiextensionsV1Interface,CustomResourceDefinitionInterface)
//
// Generated by this command:
//
//	mockgen -typed -package mocks -destination mocks/apiextensionsv1_mock.go -mock_names=CustomResourceDefinitionInterface=MockCustomResourceDefinitionV1Interface k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset/typed/apiextensions/v1 ApiextensionsV1Interface,CustomResourceDefinitionInterface
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	v1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	v10 "k8s.io/apiextensions-apiserver/pkg/client/applyconfiguration/apiextensions/v1"
	v11 "k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset/typed/apiextensions/v1"
	v12 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	rest "k8s.io/client-go/rest"
)

// MockApiextensionsV1Interface is a mock of ApiextensionsV1Interface interface.
type MockApiextensionsV1Interface struct {
	ctrl     *gomock.Controller
	recorder *MockApiextensionsV1InterfaceMockRecorder
}

// MockApiextensionsV1InterfaceMockRecorder is the mock recorder for MockApiextensionsV1Interface.
type MockApiextensionsV1InterfaceMockRecorder struct {
	mock *MockApiextensionsV1Interface
}

// NewMockApiextensionsV1Interface creates a new mock instance.
func NewMockApiextensionsV1Interface(ctrl *gomock.Controller) *MockApiextensionsV1Interface {
	mock := &MockApiextensionsV1Interface{ctrl: ctrl}
	mock.recorder = &MockApiextensionsV1InterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApiextensionsV1Interface) EXPECT() *MockApiextensionsV1InterfaceMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockApiextensionsV1Interface) ISGOMOCK() struct{} {
	return struct{}{}
}

// CustomResourceDefinitions mocks base method.
func (m *MockApiextensionsV1Interface) CustomResourceDefinitions() v11.CustomResourceDefinitionInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CustomResourceDefinitions")
	ret0, _ := ret[0].(v11.CustomResourceDefinitionInterface)
	return ret0
}

// CustomResourceDefinitions indicates an expected call of CustomResourceDefinitions.
func (mr *MockApiextensionsV1InterfaceMockRecorder) CustomResourceDefinitions() *MockApiextensionsV1InterfaceCustomResourceDefinitionsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CustomResourceDefinitions", reflect.TypeOf((*MockApiextensionsV1Interface)(nil).CustomResourceDefinitions))
	return &MockApiextensionsV1InterfaceCustomResourceDefinitionsCall{Call: call}
}

// MockApiextensionsV1InterfaceCustomResourceDefinitionsCall wrap *gomock.Call
type MockApiextensionsV1InterfaceCustomResourceDefinitionsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockApiextensionsV1InterfaceCustomResourceDefinitionsCall) Return(arg0 v11.CustomResourceDefinitionInterface) *MockApiextensionsV1InterfaceCustomResourceDefinitionsCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockApiextensionsV1InterfaceCustomResourceDefinitionsCall) Do(f func() v11.CustomResourceDefinitionInterface) *MockApiextensionsV1InterfaceCustomResourceDefinitionsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockApiextensionsV1InterfaceCustomResourceDefinitionsCall) DoAndReturn(f func() v11.CustomResourceDefinitionInterface) *MockApiextensionsV1InterfaceCustomResourceDefinitionsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// RESTClient mocks base method.
func (m *MockApiextensionsV1Interface) RESTClient() rest.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RESTClient")
	ret0, _ := ret[0].(rest.Interface)
	return ret0
}

// RESTClient indicates an expected call of RESTClient.
func (mr *MockApiextensionsV1InterfaceMockRecorder) RESTClient() *MockApiextensionsV1InterfaceRESTClientCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RESTClient", reflect.TypeOf((*MockApiextensionsV1Interface)(nil).RESTClient))
	return &MockApiextensionsV1InterfaceRESTClientCall{Call: call}
}

// MockApiextensionsV1InterfaceRESTClientCall wrap *gomock.Call
type MockApiextensionsV1InterfaceRESTClientCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockApiextensionsV1InterfaceRESTClientCall) Return(arg0 rest.Interface) *MockApiextensionsV1InterfaceRESTClientCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockApiextensionsV1InterfaceRESTClientCall) Do(f func() rest.Interface) *MockApiextensionsV1InterfaceRESTClientCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockApiextensionsV1InterfaceRESTClientCall) DoAndReturn(f func() rest.Interface) *MockApiextensionsV1InterfaceRESTClientCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// MockCustomResourceDefinitionV1Interface is a mock of CustomResourceDefinitionInterface interface.
type MockCustomResourceDefinitionV1Interface struct {
	ctrl     *gomock.Controller
	recorder *MockCustomResourceDefinitionV1InterfaceMockRecorder
}

// MockCustomResourceDefinitionV1InterfaceMockRecorder is the mock recorder for MockCustomResourceDefinitionV1Interface.
type MockCustomResourceDefinitionV1InterfaceMockRecorder struct {
	mock *MockCustomResourceDefinitionV1Interface
}

// NewMockCustomResourceDefinitionV1Interface creates a new mock instance.
func NewMockCustomResourceDefinitionV1Interface(ctrl *gomock.Controller) *MockCustomResourceDefinitionV1Interface {
	mock := &MockCustomResourceDefinitionV1Interface{ctrl: ctrl}
	mock.recorder = &MockCustomResourceDefinitionV1InterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomResourceDefinitionV1Interface) EXPECT() *MockCustomResourceDefinitionV1InterfaceMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockCustomResourceDefinitionV1Interface) ISGOMOCK() struct{} {
	return struct{}{}
}

// Apply mocks base method.
func (m *MockCustomResourceDefinitionV1Interface) Apply(arg0 context.Context, arg1 *v10.CustomResourceDefinitionApplyConfiguration, arg2 v12.ApplyOptions) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Apply", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Apply indicates an expected call of Apply.
func (mr *MockCustomResourceDefinitionV1InterfaceMockRecorder) Apply(arg0, arg1, arg2 any) *MockCustomResourceDefinitionV1InterfaceApplyCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Apply", reflect.TypeOf((*MockCustomResourceDefinitionV1Interface)(nil).Apply), arg0, arg1, arg2)
	return &MockCustomResourceDefinitionV1InterfaceApplyCall{Call: call}
}

// MockCustomResourceDefinitionV1InterfaceApplyCall wrap *gomock.Call
type MockCustomResourceDefinitionV1InterfaceApplyCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomResourceDefinitionV1InterfaceApplyCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *MockCustomResourceDefinitionV1InterfaceApplyCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomResourceDefinitionV1InterfaceApplyCall) Do(f func(context.Context, *v10.CustomResourceDefinitionApplyConfiguration, v12.ApplyOptions) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfaceApplyCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomResourceDefinitionV1InterfaceApplyCall) DoAndReturn(f func(context.Context, *v10.CustomResourceDefinitionApplyConfiguration, v12.ApplyOptions) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfaceApplyCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// ApplyStatus mocks base method.
func (m *MockCustomResourceDefinitionV1Interface) ApplyStatus(arg0 context.Context, arg1 *v10.CustomResourceDefinitionApplyConfiguration, arg2 v12.ApplyOptions) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ApplyStatus", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ApplyStatus indicates an expected call of ApplyStatus.
func (mr *MockCustomResourceDefinitionV1InterfaceMockRecorder) ApplyStatus(arg0, arg1, arg2 any) *MockCustomResourceDefinitionV1InterfaceApplyStatusCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplyStatus", reflect.TypeOf((*MockCustomResourceDefinitionV1Interface)(nil).ApplyStatus), arg0, arg1, arg2)
	return &MockCustomResourceDefinitionV1InterfaceApplyStatusCall{Call: call}
}

// MockCustomResourceDefinitionV1InterfaceApplyStatusCall wrap *gomock.Call
type MockCustomResourceDefinitionV1InterfaceApplyStatusCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomResourceDefinitionV1InterfaceApplyStatusCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *MockCustomResourceDefinitionV1InterfaceApplyStatusCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomResourceDefinitionV1InterfaceApplyStatusCall) Do(f func(context.Context, *v10.CustomResourceDefinitionApplyConfiguration, v12.ApplyOptions) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfaceApplyStatusCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomResourceDefinitionV1InterfaceApplyStatusCall) DoAndReturn(f func(context.Context, *v10.CustomResourceDefinitionApplyConfiguration, v12.ApplyOptions) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfaceApplyStatusCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Create mocks base method.
func (m *MockCustomResourceDefinitionV1Interface) Create(arg0 context.Context, arg1 *v1.CustomResourceDefinition, arg2 v12.CreateOptions) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockCustomResourceDefinitionV1InterfaceMockRecorder) Create(arg0, arg1, arg2 any) *MockCustomResourceDefinitionV1InterfaceCreateCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCustomResourceDefinitionV1Interface)(nil).Create), arg0, arg1, arg2)
	return &MockCustomResourceDefinitionV1InterfaceCreateCall{Call: call}
}

// MockCustomResourceDefinitionV1InterfaceCreateCall wrap *gomock.Call
type MockCustomResourceDefinitionV1InterfaceCreateCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomResourceDefinitionV1InterfaceCreateCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *MockCustomResourceDefinitionV1InterfaceCreateCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomResourceDefinitionV1InterfaceCreateCall) Do(f func(context.Context, *v1.CustomResourceDefinition, v12.CreateOptions) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfaceCreateCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomResourceDefinitionV1InterfaceCreateCall) DoAndReturn(f func(context.Context, *v1.CustomResourceDefinition, v12.CreateOptions) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfaceCreateCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Delete mocks base method.
func (m *MockCustomResourceDefinitionV1Interface) Delete(arg0 context.Context, arg1 string, arg2 v12.DeleteOptions) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockCustomResourceDefinitionV1InterfaceMockRecorder) Delete(arg0, arg1, arg2 any) *MockCustomResourceDefinitionV1InterfaceDeleteCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockCustomResourceDefinitionV1Interface)(nil).Delete), arg0, arg1, arg2)
	return &MockCustomResourceDefinitionV1InterfaceDeleteCall{Call: call}
}

// MockCustomResourceDefinitionV1InterfaceDeleteCall wrap *gomock.Call
type MockCustomResourceDefinitionV1InterfaceDeleteCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomResourceDefinitionV1InterfaceDeleteCall) Return(arg0 error) *MockCustomResourceDefinitionV1InterfaceDeleteCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomResourceDefinitionV1InterfaceDeleteCall) Do(f func(context.Context, string, v12.DeleteOptions) error) *MockCustomResourceDefinitionV1InterfaceDeleteCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomResourceDefinitionV1InterfaceDeleteCall) DoAndReturn(f func(context.Context, string, v12.DeleteOptions) error) *MockCustomResourceDefinitionV1InterfaceDeleteCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// DeleteCollection mocks base method.
func (m *MockCustomResourceDefinitionV1Interface) DeleteCollection(arg0 context.Context, arg1 v12.DeleteOptions, arg2 v12.ListOptions) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCollection", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCollection indicates an expected call of DeleteCollection.
func (mr *MockCustomResourceDefinitionV1InterfaceMockRecorder) DeleteCollection(arg0, arg1, arg2 any) *MockCustomResourceDefinitionV1InterfaceDeleteCollectionCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCollection", reflect.TypeOf((*MockCustomResourceDefinitionV1Interface)(nil).DeleteCollection), arg0, arg1, arg2)
	return &MockCustomResourceDefinitionV1InterfaceDeleteCollectionCall{Call: call}
}

// MockCustomResourceDefinitionV1InterfaceDeleteCollectionCall wrap *gomock.Call
type MockCustomResourceDefinitionV1InterfaceDeleteCollectionCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomResourceDefinitionV1InterfaceDeleteCollectionCall) Return(arg0 error) *MockCustomResourceDefinitionV1InterfaceDeleteCollectionCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomResourceDefinitionV1InterfaceDeleteCollectionCall) Do(f func(context.Context, v12.DeleteOptions, v12.ListOptions) error) *MockCustomResourceDefinitionV1InterfaceDeleteCollectionCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomResourceDefinitionV1InterfaceDeleteCollectionCall) DoAndReturn(f func(context.Context, v12.DeleteOptions, v12.ListOptions) error) *MockCustomResourceDefinitionV1InterfaceDeleteCollectionCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Get mocks base method.
func (m *MockCustomResourceDefinitionV1Interface) Get(arg0 context.Context, arg1 string, arg2 v12.GetOptions) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockCustomResourceDefinitionV1InterfaceMockRecorder) Get(arg0, arg1, arg2 any) *MockCustomResourceDefinitionV1InterfaceGetCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCustomResourceDefinitionV1Interface)(nil).Get), arg0, arg1, arg2)
	return &MockCustomResourceDefinitionV1InterfaceGetCall{Call: call}
}

// MockCustomResourceDefinitionV1InterfaceGetCall wrap *gomock.Call
type MockCustomResourceDefinitionV1InterfaceGetCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomResourceDefinitionV1InterfaceGetCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *MockCustomResourceDefinitionV1InterfaceGetCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomResourceDefinitionV1InterfaceGetCall) Do(f func(context.Context, string, v12.GetOptions) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfaceGetCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomResourceDefinitionV1InterfaceGetCall) DoAndReturn(f func(context.Context, string, v12.GetOptions) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfaceGetCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// List mocks base method.
func (m *MockCustomResourceDefinitionV1Interface) List(arg0 context.Context, arg1 v12.ListOptions) (*v1.CustomResourceDefinitionList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(*v1.CustomResourceDefinitionList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockCustomResourceDefinitionV1InterfaceMockRecorder) List(arg0, arg1 any) *MockCustomResourceDefinitionV1InterfaceListCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockCustomResourceDefinitionV1Interface)(nil).List), arg0, arg1)
	return &MockCustomResourceDefinitionV1InterfaceListCall{Call: call}
}

// MockCustomResourceDefinitionV1InterfaceListCall wrap *gomock.Call
type MockCustomResourceDefinitionV1InterfaceListCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomResourceDefinitionV1InterfaceListCall) Return(arg0 *v1.CustomResourceDefinitionList, arg1 error) *MockCustomResourceDefinitionV1InterfaceListCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomResourceDefinitionV1InterfaceListCall) Do(f func(context.Context, v12.ListOptions) (*v1.CustomResourceDefinitionList, error)) *MockCustomResourceDefinitionV1InterfaceListCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomResourceDefinitionV1InterfaceListCall) DoAndReturn(f func(context.Context, v12.ListOptions) (*v1.CustomResourceDefinitionList, error)) *MockCustomResourceDefinitionV1InterfaceListCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Patch mocks base method.
func (m *MockCustomResourceDefinitionV1Interface) Patch(arg0 context.Context, arg1 string, arg2 types.PatchType, arg3 []byte, arg4 v12.PatchOptions, arg5 ...string) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	varargs := []any{arg0, arg1, arg2, arg3, arg4}
	for _, a := range arg5 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Patch", varargs...)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Patch indicates an expected call of Patch.
func (mr *MockCustomResourceDefinitionV1InterfaceMockRecorder) Patch(arg0, arg1, arg2, arg3, arg4 any, arg5 ...any) *MockCustomResourceDefinitionV1InterfacePatchCall {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{arg0, arg1, arg2, arg3, arg4}, arg5...)
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Patch", reflect.TypeOf((*MockCustomResourceDefinitionV1Interface)(nil).Patch), varargs...)
	return &MockCustomResourceDefinitionV1InterfacePatchCall{Call: call}
}

// MockCustomResourceDefinitionV1InterfacePatchCall wrap *gomock.Call
type MockCustomResourceDefinitionV1InterfacePatchCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomResourceDefinitionV1InterfacePatchCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *MockCustomResourceDefinitionV1InterfacePatchCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomResourceDefinitionV1InterfacePatchCall) Do(f func(context.Context, string, types.PatchType, []byte, v12.PatchOptions, ...string) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfacePatchCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomResourceDefinitionV1InterfacePatchCall) DoAndReturn(f func(context.Context, string, types.PatchType, []byte, v12.PatchOptions, ...string) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfacePatchCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Update mocks base method.
func (m *MockCustomResourceDefinitionV1Interface) Update(arg0 context.Context, arg1 *v1.CustomResourceDefinition, arg2 v12.UpdateOptions) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockCustomResourceDefinitionV1InterfaceMockRecorder) Update(arg0, arg1, arg2 any) *MockCustomResourceDefinitionV1InterfaceUpdateCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockCustomResourceDefinitionV1Interface)(nil).Update), arg0, arg1, arg2)
	return &MockCustomResourceDefinitionV1InterfaceUpdateCall{Call: call}
}

// MockCustomResourceDefinitionV1InterfaceUpdateCall wrap *gomock.Call
type MockCustomResourceDefinitionV1InterfaceUpdateCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomResourceDefinitionV1InterfaceUpdateCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *MockCustomResourceDefinitionV1InterfaceUpdateCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomResourceDefinitionV1InterfaceUpdateCall) Do(f func(context.Context, *v1.CustomResourceDefinition, v12.UpdateOptions) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfaceUpdateCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomResourceDefinitionV1InterfaceUpdateCall) DoAndReturn(f func(context.Context, *v1.CustomResourceDefinition, v12.UpdateOptions) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfaceUpdateCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// UpdateStatus mocks base method.
func (m *MockCustomResourceDefinitionV1Interface) UpdateStatus(arg0 context.Context, arg1 *v1.CustomResourceDefinition, arg2 v12.UpdateOptions) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateStatus", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateStatus indicates an expected call of UpdateStatus.
func (mr *MockCustomResourceDefinitionV1InterfaceMockRecorder) UpdateStatus(arg0, arg1, arg2 any) *MockCustomResourceDefinitionV1InterfaceUpdateStatusCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStatus", reflect.TypeOf((*MockCustomResourceDefinitionV1Interface)(nil).UpdateStatus), arg0, arg1, arg2)
	return &MockCustomResourceDefinitionV1InterfaceUpdateStatusCall{Call: call}
}

// MockCustomResourceDefinitionV1InterfaceUpdateStatusCall wrap *gomock.Call
type MockCustomResourceDefinitionV1InterfaceUpdateStatusCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomResourceDefinitionV1InterfaceUpdateStatusCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *MockCustomResourceDefinitionV1InterfaceUpdateStatusCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomResourceDefinitionV1InterfaceUpdateStatusCall) Do(f func(context.Context, *v1.CustomResourceDefinition, v12.UpdateOptions) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfaceUpdateStatusCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomResourceDefinitionV1InterfaceUpdateStatusCall) DoAndReturn(f func(context.Context, *v1.CustomResourceDefinition, v12.UpdateOptions) (*v1.CustomResourceDefinition, error)) *MockCustomResourceDefinitionV1InterfaceUpdateStatusCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Watch mocks base method.
func (m *MockCustomResourceDefinitionV1Interface) Watch(arg0 context.Context, arg1 v12.ListOptions) (watch.Interface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Watch", arg0, arg1)
	ret0, _ := ret[0].(watch.Interface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Watch indicates an expected call of Watch.
func (mr *MockCustomResourceDefinitionV1InterfaceMockRecorder) Watch(arg0, arg1 any) *MockCustomResourceDefinitionV1InterfaceWatchCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Watch", reflect.TypeOf((*MockCustomResourceDefinitionV1Interface)(nil).Watch), arg0, arg1)
	return &MockCustomResourceDefinitionV1InterfaceWatchCall{Call: call}
}

// MockCustomResourceDefinitionV1InterfaceWatchCall wrap *gomock.Call
type MockCustomResourceDefinitionV1InterfaceWatchCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomResourceDefinitionV1InterfaceWatchCall) Return(arg0 watch.Interface, arg1 error) *MockCustomResourceDefinitionV1InterfaceWatchCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomResourceDefinitionV1InterfaceWatchCall) Do(f func(context.Context, v12.ListOptions) (watch.Interface, error)) *MockCustomResourceDefinitionV1InterfaceWatchCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomResourceDefinitionV1InterfaceWatchCall) DoAndReturn(f func(context.Context, v12.ListOptions) (watch.Interface, error)) *MockCustomResourceDefinitionV1InterfaceWatchCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
