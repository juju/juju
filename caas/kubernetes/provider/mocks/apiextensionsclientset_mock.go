// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset (interfaces: Interface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1beta1 "k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset/typed/apiextensions/v1beta1"
	discovery "k8s.io/client-go/discovery"
	reflect "reflect"
)

// MockApiExtensionsClientInterface is a mock of Interface interface
type MockApiExtensionsClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockApiExtensionsClientInterfaceMockRecorder
}

// MockApiExtensionsClientInterfaceMockRecorder is the mock recorder for MockApiExtensionsClientInterface
type MockApiExtensionsClientInterfaceMockRecorder struct {
	mock *MockApiExtensionsClientInterface
}

// NewMockApiExtensionsClientInterface creates a new mock instance
func NewMockApiExtensionsClientInterface(ctrl *gomock.Controller) *MockApiExtensionsClientInterface {
	mock := &MockApiExtensionsClientInterface{ctrl: ctrl}
	mock.recorder = &MockApiExtensionsClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockApiExtensionsClientInterface) EXPECT() *MockApiExtensionsClientInterfaceMockRecorder {
	return m.recorder
}

// Apiextensions mocks base method
func (m *MockApiExtensionsClientInterface) Apiextensions() v1beta1.ApiextensionsV1beta1Interface {
	ret := m.ctrl.Call(m, "Apiextensions")
	ret0, _ := ret[0].(v1beta1.ApiextensionsV1beta1Interface)
	return ret0
}

// Apiextensions indicates an expected call of Apiextensions
func (mr *MockApiExtensionsClientInterfaceMockRecorder) Apiextensions() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Apiextensions", reflect.TypeOf((*MockApiExtensionsClientInterface)(nil).Apiextensions))
}

// ApiextensionsV1beta1 mocks base method
func (m *MockApiExtensionsClientInterface) ApiextensionsV1beta1() v1beta1.ApiextensionsV1beta1Interface {
	ret := m.ctrl.Call(m, "ApiextensionsV1beta1")
	ret0, _ := ret[0].(v1beta1.ApiextensionsV1beta1Interface)
	return ret0
}

// ApiextensionsV1beta1 indicates an expected call of ApiextensionsV1beta1
func (mr *MockApiExtensionsClientInterfaceMockRecorder) ApiextensionsV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApiextensionsV1beta1", reflect.TypeOf((*MockApiExtensionsClientInterface)(nil).ApiextensionsV1beta1))
}

// Discovery mocks base method
func (m *MockApiExtensionsClientInterface) Discovery() discovery.DiscoveryInterface {
	ret := m.ctrl.Call(m, "Discovery")
	ret0, _ := ret[0].(discovery.DiscoveryInterface)
	return ret0
}

// Discovery indicates an expected call of Discovery
func (mr *MockApiExtensionsClientInterfaceMockRecorder) Discovery() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Discovery", reflect.TypeOf((*MockApiExtensionsClientInterface)(nil).Discovery))
}
