// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/client-go/informers/core/v1 (interfaces: ServiceAccountInformer)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/client-go/listers/core/v1"
	cache "k8s.io/client-go/tools/cache"
	reflect "reflect"
)

// MockServiceAccountInformer is a mock of ServiceAccountInformer interface
type MockServiceAccountInformer struct {
	ctrl     *gomock.Controller
	recorder *MockServiceAccountInformerMockRecorder
}

// MockServiceAccountInformerMockRecorder is the mock recorder for MockServiceAccountInformer
type MockServiceAccountInformerMockRecorder struct {
	mock *MockServiceAccountInformer
}

// NewMockServiceAccountInformer creates a new mock instance
func NewMockServiceAccountInformer(ctrl *gomock.Controller) *MockServiceAccountInformer {
	mock := &MockServiceAccountInformer{ctrl: ctrl}
	mock.recorder = &MockServiceAccountInformerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockServiceAccountInformer) EXPECT() *MockServiceAccountInformerMockRecorder {
	return m.recorder
}

// Informer mocks base method
func (m *MockServiceAccountInformer) Informer() cache.SharedIndexInformer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Informer")
	ret0, _ := ret[0].(cache.SharedIndexInformer)
	return ret0
}

// Informer indicates an expected call of Informer
func (mr *MockServiceAccountInformerMockRecorder) Informer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Informer", reflect.TypeOf((*MockServiceAccountInformer)(nil).Informer))
}

// Lister mocks base method
func (m *MockServiceAccountInformer) Lister() v1.ServiceAccountLister {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Lister")
	ret0, _ := ret[0].(v1.ServiceAccountLister)
	return ret0
}

// Lister indicates an expected call of Lister
func (mr *MockServiceAccountInformerMockRecorder) Lister() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Lister", reflect.TypeOf((*MockServiceAccountInformer)(nil).Lister))
}
