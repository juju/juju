// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/client-go/kubernetes (interfaces: Interface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	discovery "k8s.io/client-go/discovery"
	v1alpha1 "k8s.io/client-go/kubernetes/typed/admissionregistration/v1alpha1"
	v1beta1 "k8s.io/client-go/kubernetes/typed/admissionregistration/v1beta1"
	v1 "k8s.io/client-go/kubernetes/typed/apps/v1"
	v1beta10 "k8s.io/client-go/kubernetes/typed/apps/v1beta1"
	v1beta2 "k8s.io/client-go/kubernetes/typed/apps/v1beta2"
	v10 "k8s.io/client-go/kubernetes/typed/authentication/v1"
	v1beta11 "k8s.io/client-go/kubernetes/typed/authentication/v1beta1"
	v11 "k8s.io/client-go/kubernetes/typed/authorization/v1"
	v1beta12 "k8s.io/client-go/kubernetes/typed/authorization/v1beta1"
	v12 "k8s.io/client-go/kubernetes/typed/autoscaling/v1"
	v2beta1 "k8s.io/client-go/kubernetes/typed/autoscaling/v2beta1"
	v13 "k8s.io/client-go/kubernetes/typed/batch/v1"
	v1beta13 "k8s.io/client-go/kubernetes/typed/batch/v1beta1"
	v2alpha1 "k8s.io/client-go/kubernetes/typed/batch/v2alpha1"
	v1beta14 "k8s.io/client-go/kubernetes/typed/certificates/v1beta1"
	v1beta15 "k8s.io/client-go/kubernetes/typed/coordination/v1beta1"
	v14 "k8s.io/client-go/kubernetes/typed/core/v1"
	v1beta16 "k8s.io/client-go/kubernetes/typed/events/v1beta1"
	v1beta17 "k8s.io/client-go/kubernetes/typed/extensions/v1beta1"
	v15 "k8s.io/client-go/kubernetes/typed/networking/v1"
	v1beta18 "k8s.io/client-go/kubernetes/typed/policy/v1beta1"
	v16 "k8s.io/client-go/kubernetes/typed/rbac/v1"
	v1alpha10 "k8s.io/client-go/kubernetes/typed/rbac/v1alpha1"
	v1beta19 "k8s.io/client-go/kubernetes/typed/rbac/v1beta1"
	v1alpha11 "k8s.io/client-go/kubernetes/typed/scheduling/v1alpha1"
	v1beta110 "k8s.io/client-go/kubernetes/typed/scheduling/v1beta1"
	v1alpha12 "k8s.io/client-go/kubernetes/typed/settings/v1alpha1"
	v17 "k8s.io/client-go/kubernetes/typed/storage/v1"
	v1alpha13 "k8s.io/client-go/kubernetes/typed/storage/v1alpha1"
	v1beta111 "k8s.io/client-go/kubernetes/typed/storage/v1beta1"
	reflect "reflect"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Admissionregistration mocks base method
func (m *MockInterface) Admissionregistration() v1beta1.AdmissionregistrationV1beta1Interface {
	ret := m.ctrl.Call(m, "Admissionregistration")
	ret0, _ := ret[0].(v1beta1.AdmissionregistrationV1beta1Interface)
	return ret0
}

// Admissionregistration indicates an expected call of Admissionregistration
func (mr *MockInterfaceMockRecorder) Admissionregistration() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Admissionregistration", reflect.TypeOf((*MockInterface)(nil).Admissionregistration))
}

// AdmissionregistrationV1alpha1 mocks base method
func (m *MockInterface) AdmissionregistrationV1alpha1() v1alpha1.AdmissionregistrationV1alpha1Interface {
	ret := m.ctrl.Call(m, "AdmissionregistrationV1alpha1")
	ret0, _ := ret[0].(v1alpha1.AdmissionregistrationV1alpha1Interface)
	return ret0
}

// AdmissionregistrationV1alpha1 indicates an expected call of AdmissionregistrationV1alpha1
func (mr *MockInterfaceMockRecorder) AdmissionregistrationV1alpha1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdmissionregistrationV1alpha1", reflect.TypeOf((*MockInterface)(nil).AdmissionregistrationV1alpha1))
}

// AdmissionregistrationV1beta1 mocks base method
func (m *MockInterface) AdmissionregistrationV1beta1() v1beta1.AdmissionregistrationV1beta1Interface {
	ret := m.ctrl.Call(m, "AdmissionregistrationV1beta1")
	ret0, _ := ret[0].(v1beta1.AdmissionregistrationV1beta1Interface)
	return ret0
}

// AdmissionregistrationV1beta1 indicates an expected call of AdmissionregistrationV1beta1
func (mr *MockInterfaceMockRecorder) AdmissionregistrationV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdmissionregistrationV1beta1", reflect.TypeOf((*MockInterface)(nil).AdmissionregistrationV1beta1))
}

// Apps mocks base method
func (m *MockInterface) Apps() v1.AppsV1Interface {
	ret := m.ctrl.Call(m, "Apps")
	ret0, _ := ret[0].(v1.AppsV1Interface)
	return ret0
}

// Apps indicates an expected call of Apps
func (mr *MockInterfaceMockRecorder) Apps() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Apps", reflect.TypeOf((*MockInterface)(nil).Apps))
}

// AppsV1 mocks base method
func (m *MockInterface) AppsV1() v1.AppsV1Interface {
	ret := m.ctrl.Call(m, "AppsV1")
	ret0, _ := ret[0].(v1.AppsV1Interface)
	return ret0
}

// AppsV1 indicates an expected call of AppsV1
func (mr *MockInterfaceMockRecorder) AppsV1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AppsV1", reflect.TypeOf((*MockInterface)(nil).AppsV1))
}

// AppsV1beta1 mocks base method
func (m *MockInterface) AppsV1beta1() v1beta10.AppsV1beta1Interface {
	ret := m.ctrl.Call(m, "AppsV1beta1")
	ret0, _ := ret[0].(v1beta10.AppsV1beta1Interface)
	return ret0
}

// AppsV1beta1 indicates an expected call of AppsV1beta1
func (mr *MockInterfaceMockRecorder) AppsV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AppsV1beta1", reflect.TypeOf((*MockInterface)(nil).AppsV1beta1))
}

// AppsV1beta2 mocks base method
func (m *MockInterface) AppsV1beta2() v1beta2.AppsV1beta2Interface {
	ret := m.ctrl.Call(m, "AppsV1beta2")
	ret0, _ := ret[0].(v1beta2.AppsV1beta2Interface)
	return ret0
}

// AppsV1beta2 indicates an expected call of AppsV1beta2
func (mr *MockInterfaceMockRecorder) AppsV1beta2() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AppsV1beta2", reflect.TypeOf((*MockInterface)(nil).AppsV1beta2))
}

// Authentication mocks base method
func (m *MockInterface) Authentication() v10.AuthenticationV1Interface {
	ret := m.ctrl.Call(m, "Authentication")
	ret0, _ := ret[0].(v10.AuthenticationV1Interface)
	return ret0
}

// Authentication indicates an expected call of Authentication
func (mr *MockInterfaceMockRecorder) Authentication() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authentication", reflect.TypeOf((*MockInterface)(nil).Authentication))
}

// AuthenticationV1 mocks base method
func (m *MockInterface) AuthenticationV1() v10.AuthenticationV1Interface {
	ret := m.ctrl.Call(m, "AuthenticationV1")
	ret0, _ := ret[0].(v10.AuthenticationV1Interface)
	return ret0
}

// AuthenticationV1 indicates an expected call of AuthenticationV1
func (mr *MockInterfaceMockRecorder) AuthenticationV1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthenticationV1", reflect.TypeOf((*MockInterface)(nil).AuthenticationV1))
}

// AuthenticationV1beta1 mocks base method
func (m *MockInterface) AuthenticationV1beta1() v1beta11.AuthenticationV1beta1Interface {
	ret := m.ctrl.Call(m, "AuthenticationV1beta1")
	ret0, _ := ret[0].(v1beta11.AuthenticationV1beta1Interface)
	return ret0
}

// AuthenticationV1beta1 indicates an expected call of AuthenticationV1beta1
func (mr *MockInterfaceMockRecorder) AuthenticationV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthenticationV1beta1", reflect.TypeOf((*MockInterface)(nil).AuthenticationV1beta1))
}

// Authorization mocks base method
func (m *MockInterface) Authorization() v11.AuthorizationV1Interface {
	ret := m.ctrl.Call(m, "Authorization")
	ret0, _ := ret[0].(v11.AuthorizationV1Interface)
	return ret0
}

// Authorization indicates an expected call of Authorization
func (mr *MockInterfaceMockRecorder) Authorization() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authorization", reflect.TypeOf((*MockInterface)(nil).Authorization))
}

// AuthorizationV1 mocks base method
func (m *MockInterface) AuthorizationV1() v11.AuthorizationV1Interface {
	ret := m.ctrl.Call(m, "AuthorizationV1")
	ret0, _ := ret[0].(v11.AuthorizationV1Interface)
	return ret0
}

// AuthorizationV1 indicates an expected call of AuthorizationV1
func (mr *MockInterfaceMockRecorder) AuthorizationV1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthorizationV1", reflect.TypeOf((*MockInterface)(nil).AuthorizationV1))
}

// AuthorizationV1beta1 mocks base method
func (m *MockInterface) AuthorizationV1beta1() v1beta12.AuthorizationV1beta1Interface {
	ret := m.ctrl.Call(m, "AuthorizationV1beta1")
	ret0, _ := ret[0].(v1beta12.AuthorizationV1beta1Interface)
	return ret0
}

// AuthorizationV1beta1 indicates an expected call of AuthorizationV1beta1
func (mr *MockInterfaceMockRecorder) AuthorizationV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthorizationV1beta1", reflect.TypeOf((*MockInterface)(nil).AuthorizationV1beta1))
}

// Autoscaling mocks base method
func (m *MockInterface) Autoscaling() v12.AutoscalingV1Interface {
	ret := m.ctrl.Call(m, "Autoscaling")
	ret0, _ := ret[0].(v12.AutoscalingV1Interface)
	return ret0
}

// Autoscaling indicates an expected call of Autoscaling
func (mr *MockInterfaceMockRecorder) Autoscaling() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Autoscaling", reflect.TypeOf((*MockInterface)(nil).Autoscaling))
}

// AutoscalingV1 mocks base method
func (m *MockInterface) AutoscalingV1() v12.AutoscalingV1Interface {
	ret := m.ctrl.Call(m, "AutoscalingV1")
	ret0, _ := ret[0].(v12.AutoscalingV1Interface)
	return ret0
}

// AutoscalingV1 indicates an expected call of AutoscalingV1
func (mr *MockInterfaceMockRecorder) AutoscalingV1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AutoscalingV1", reflect.TypeOf((*MockInterface)(nil).AutoscalingV1))
}

// AutoscalingV2beta1 mocks base method
func (m *MockInterface) AutoscalingV2beta1() v2beta1.AutoscalingV2beta1Interface {
	ret := m.ctrl.Call(m, "AutoscalingV2beta1")
	ret0, _ := ret[0].(v2beta1.AutoscalingV2beta1Interface)
	return ret0
}

// AutoscalingV2beta1 indicates an expected call of AutoscalingV2beta1
func (mr *MockInterfaceMockRecorder) AutoscalingV2beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AutoscalingV2beta1", reflect.TypeOf((*MockInterface)(nil).AutoscalingV2beta1))
}

// Batch mocks base method
func (m *MockInterface) Batch() v13.BatchV1Interface {
	ret := m.ctrl.Call(m, "Batch")
	ret0, _ := ret[0].(v13.BatchV1Interface)
	return ret0
}

// Batch indicates an expected call of Batch
func (mr *MockInterfaceMockRecorder) Batch() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Batch", reflect.TypeOf((*MockInterface)(nil).Batch))
}

// BatchV1 mocks base method
func (m *MockInterface) BatchV1() v13.BatchV1Interface {
	ret := m.ctrl.Call(m, "BatchV1")
	ret0, _ := ret[0].(v13.BatchV1Interface)
	return ret0
}

// BatchV1 indicates an expected call of BatchV1
func (mr *MockInterfaceMockRecorder) BatchV1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchV1", reflect.TypeOf((*MockInterface)(nil).BatchV1))
}

// BatchV1beta1 mocks base method
func (m *MockInterface) BatchV1beta1() v1beta13.BatchV1beta1Interface {
	ret := m.ctrl.Call(m, "BatchV1beta1")
	ret0, _ := ret[0].(v1beta13.BatchV1beta1Interface)
	return ret0
}

// BatchV1beta1 indicates an expected call of BatchV1beta1
func (mr *MockInterfaceMockRecorder) BatchV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchV1beta1", reflect.TypeOf((*MockInterface)(nil).BatchV1beta1))
}

// BatchV2alpha1 mocks base method
func (m *MockInterface) BatchV2alpha1() v2alpha1.BatchV2alpha1Interface {
	ret := m.ctrl.Call(m, "BatchV2alpha1")
	ret0, _ := ret[0].(v2alpha1.BatchV2alpha1Interface)
	return ret0
}

// BatchV2alpha1 indicates an expected call of BatchV2alpha1
func (mr *MockInterfaceMockRecorder) BatchV2alpha1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchV2alpha1", reflect.TypeOf((*MockInterface)(nil).BatchV2alpha1))
}

// Certificates mocks base method
func (m *MockInterface) Certificates() v1beta14.CertificatesV1beta1Interface {
	ret := m.ctrl.Call(m, "Certificates")
	ret0, _ := ret[0].(v1beta14.CertificatesV1beta1Interface)
	return ret0
}

// Certificates indicates an expected call of Certificates
func (mr *MockInterfaceMockRecorder) Certificates() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Certificates", reflect.TypeOf((*MockInterface)(nil).Certificates))
}

// CertificatesV1beta1 mocks base method
func (m *MockInterface) CertificatesV1beta1() v1beta14.CertificatesV1beta1Interface {
	ret := m.ctrl.Call(m, "CertificatesV1beta1")
	ret0, _ := ret[0].(v1beta14.CertificatesV1beta1Interface)
	return ret0
}

// CertificatesV1beta1 indicates an expected call of CertificatesV1beta1
func (mr *MockInterfaceMockRecorder) CertificatesV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CertificatesV1beta1", reflect.TypeOf((*MockInterface)(nil).CertificatesV1beta1))
}

// Coordination mocks base method
func (m *MockInterface) Coordination() v1beta15.CoordinationV1beta1Interface {
	ret := m.ctrl.Call(m, "Coordination")
	ret0, _ := ret[0].(v1beta15.CoordinationV1beta1Interface)
	return ret0
}

// Coordination indicates an expected call of Coordination
func (mr *MockInterfaceMockRecorder) Coordination() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Coordination", reflect.TypeOf((*MockInterface)(nil).Coordination))
}

// CoordinationV1beta1 mocks base method
func (m *MockInterface) CoordinationV1beta1() v1beta15.CoordinationV1beta1Interface {
	ret := m.ctrl.Call(m, "CoordinationV1beta1")
	ret0, _ := ret[0].(v1beta15.CoordinationV1beta1Interface)
	return ret0
}

// CoordinationV1beta1 indicates an expected call of CoordinationV1beta1
func (mr *MockInterfaceMockRecorder) CoordinationV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CoordinationV1beta1", reflect.TypeOf((*MockInterface)(nil).CoordinationV1beta1))
}

// Core mocks base method
func (m *MockInterface) Core() v14.CoreV1Interface {
	ret := m.ctrl.Call(m, "Core")
	ret0, _ := ret[0].(v14.CoreV1Interface)
	return ret0
}

// Core indicates an expected call of Core
func (mr *MockInterfaceMockRecorder) Core() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Core", reflect.TypeOf((*MockInterface)(nil).Core))
}

// CoreV1 mocks base method
func (m *MockInterface) CoreV1() v14.CoreV1Interface {
	ret := m.ctrl.Call(m, "CoreV1")
	ret0, _ := ret[0].(v14.CoreV1Interface)
	return ret0
}

// CoreV1 indicates an expected call of CoreV1
func (mr *MockInterfaceMockRecorder) CoreV1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CoreV1", reflect.TypeOf((*MockInterface)(nil).CoreV1))
}

// Discovery mocks base method
func (m *MockInterface) Discovery() discovery.DiscoveryInterface {
	ret := m.ctrl.Call(m, "Discovery")
	ret0, _ := ret[0].(discovery.DiscoveryInterface)
	return ret0
}

// Discovery indicates an expected call of Discovery
func (mr *MockInterfaceMockRecorder) Discovery() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Discovery", reflect.TypeOf((*MockInterface)(nil).Discovery))
}

// Events mocks base method
func (m *MockInterface) Events() v1beta16.EventsV1beta1Interface {
	ret := m.ctrl.Call(m, "Events")
	ret0, _ := ret[0].(v1beta16.EventsV1beta1Interface)
	return ret0
}

// Events indicates an expected call of Events
func (mr *MockInterfaceMockRecorder) Events() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Events", reflect.TypeOf((*MockInterface)(nil).Events))
}

// EventsV1beta1 mocks base method
func (m *MockInterface) EventsV1beta1() v1beta16.EventsV1beta1Interface {
	ret := m.ctrl.Call(m, "EventsV1beta1")
	ret0, _ := ret[0].(v1beta16.EventsV1beta1Interface)
	return ret0
}

// EventsV1beta1 indicates an expected call of EventsV1beta1
func (mr *MockInterfaceMockRecorder) EventsV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EventsV1beta1", reflect.TypeOf((*MockInterface)(nil).EventsV1beta1))
}

// Extensions mocks base method
func (m *MockInterface) Extensions() v1beta17.ExtensionsV1beta1Interface {
	ret := m.ctrl.Call(m, "Extensions")
	ret0, _ := ret[0].(v1beta17.ExtensionsV1beta1Interface)
	return ret0
}

// Extensions indicates an expected call of Extensions
func (mr *MockInterfaceMockRecorder) Extensions() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Extensions", reflect.TypeOf((*MockInterface)(nil).Extensions))
}

// ExtensionsV1beta1 mocks base method
func (m *MockInterface) ExtensionsV1beta1() v1beta17.ExtensionsV1beta1Interface {
	ret := m.ctrl.Call(m, "ExtensionsV1beta1")
	ret0, _ := ret[0].(v1beta17.ExtensionsV1beta1Interface)
	return ret0
}

// ExtensionsV1beta1 indicates an expected call of ExtensionsV1beta1
func (mr *MockInterfaceMockRecorder) ExtensionsV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtensionsV1beta1", reflect.TypeOf((*MockInterface)(nil).ExtensionsV1beta1))
}

// Networking mocks base method
func (m *MockInterface) Networking() v15.NetworkingV1Interface {
	ret := m.ctrl.Call(m, "Networking")
	ret0, _ := ret[0].(v15.NetworkingV1Interface)
	return ret0
}

// Networking indicates an expected call of Networking
func (mr *MockInterfaceMockRecorder) Networking() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Networking", reflect.TypeOf((*MockInterface)(nil).Networking))
}

// NetworkingV1 mocks base method
func (m *MockInterface) NetworkingV1() v15.NetworkingV1Interface {
	ret := m.ctrl.Call(m, "NetworkingV1")
	ret0, _ := ret[0].(v15.NetworkingV1Interface)
	return ret0
}

// NetworkingV1 indicates an expected call of NetworkingV1
func (mr *MockInterfaceMockRecorder) NetworkingV1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NetworkingV1", reflect.TypeOf((*MockInterface)(nil).NetworkingV1))
}

// Policy mocks base method
func (m *MockInterface) Policy() v1beta18.PolicyV1beta1Interface {
	ret := m.ctrl.Call(m, "Policy")
	ret0, _ := ret[0].(v1beta18.PolicyV1beta1Interface)
	return ret0
}

// Policy indicates an expected call of Policy
func (mr *MockInterfaceMockRecorder) Policy() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Policy", reflect.TypeOf((*MockInterface)(nil).Policy))
}

// PolicyV1beta1 mocks base method
func (m *MockInterface) PolicyV1beta1() v1beta18.PolicyV1beta1Interface {
	ret := m.ctrl.Call(m, "PolicyV1beta1")
	ret0, _ := ret[0].(v1beta18.PolicyV1beta1Interface)
	return ret0
}

// PolicyV1beta1 indicates an expected call of PolicyV1beta1
func (mr *MockInterfaceMockRecorder) PolicyV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PolicyV1beta1", reflect.TypeOf((*MockInterface)(nil).PolicyV1beta1))
}

// Rbac mocks base method
func (m *MockInterface) Rbac() v16.RbacV1Interface {
	ret := m.ctrl.Call(m, "Rbac")
	ret0, _ := ret[0].(v16.RbacV1Interface)
	return ret0
}

// Rbac indicates an expected call of Rbac
func (mr *MockInterfaceMockRecorder) Rbac() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Rbac", reflect.TypeOf((*MockInterface)(nil).Rbac))
}

// RbacV1 mocks base method
func (m *MockInterface) RbacV1() v16.RbacV1Interface {
	ret := m.ctrl.Call(m, "RbacV1")
	ret0, _ := ret[0].(v16.RbacV1Interface)
	return ret0
}

// RbacV1 indicates an expected call of RbacV1
func (mr *MockInterfaceMockRecorder) RbacV1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RbacV1", reflect.TypeOf((*MockInterface)(nil).RbacV1))
}

// RbacV1alpha1 mocks base method
func (m *MockInterface) RbacV1alpha1() v1alpha10.RbacV1alpha1Interface {
	ret := m.ctrl.Call(m, "RbacV1alpha1")
	ret0, _ := ret[0].(v1alpha10.RbacV1alpha1Interface)
	return ret0
}

// RbacV1alpha1 indicates an expected call of RbacV1alpha1
func (mr *MockInterfaceMockRecorder) RbacV1alpha1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RbacV1alpha1", reflect.TypeOf((*MockInterface)(nil).RbacV1alpha1))
}

// RbacV1beta1 mocks base method
func (m *MockInterface) RbacV1beta1() v1beta19.RbacV1beta1Interface {
	ret := m.ctrl.Call(m, "RbacV1beta1")
	ret0, _ := ret[0].(v1beta19.RbacV1beta1Interface)
	return ret0
}

// RbacV1beta1 indicates an expected call of RbacV1beta1
func (mr *MockInterfaceMockRecorder) RbacV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RbacV1beta1", reflect.TypeOf((*MockInterface)(nil).RbacV1beta1))
}

// Scheduling mocks base method
func (m *MockInterface) Scheduling() v1beta110.SchedulingV1beta1Interface {
	ret := m.ctrl.Call(m, "Scheduling")
	ret0, _ := ret[0].(v1beta110.SchedulingV1beta1Interface)
	return ret0
}

// Scheduling indicates an expected call of Scheduling
func (mr *MockInterfaceMockRecorder) Scheduling() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Scheduling", reflect.TypeOf((*MockInterface)(nil).Scheduling))
}

// SchedulingV1alpha1 mocks base method
func (m *MockInterface) SchedulingV1alpha1() v1alpha11.SchedulingV1alpha1Interface {
	ret := m.ctrl.Call(m, "SchedulingV1alpha1")
	ret0, _ := ret[0].(v1alpha11.SchedulingV1alpha1Interface)
	return ret0
}

// SchedulingV1alpha1 indicates an expected call of SchedulingV1alpha1
func (mr *MockInterfaceMockRecorder) SchedulingV1alpha1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SchedulingV1alpha1", reflect.TypeOf((*MockInterface)(nil).SchedulingV1alpha1))
}

// SchedulingV1beta1 mocks base method
func (m *MockInterface) SchedulingV1beta1() v1beta110.SchedulingV1beta1Interface {
	ret := m.ctrl.Call(m, "SchedulingV1beta1")
	ret0, _ := ret[0].(v1beta110.SchedulingV1beta1Interface)
	return ret0
}

// SchedulingV1beta1 indicates an expected call of SchedulingV1beta1
func (mr *MockInterfaceMockRecorder) SchedulingV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SchedulingV1beta1", reflect.TypeOf((*MockInterface)(nil).SchedulingV1beta1))
}

// Settings mocks base method
func (m *MockInterface) Settings() v1alpha12.SettingsV1alpha1Interface {
	ret := m.ctrl.Call(m, "Settings")
	ret0, _ := ret[0].(v1alpha12.SettingsV1alpha1Interface)
	return ret0
}

// Settings indicates an expected call of Settings
func (mr *MockInterfaceMockRecorder) Settings() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Settings", reflect.TypeOf((*MockInterface)(nil).Settings))
}

// SettingsV1alpha1 mocks base method
func (m *MockInterface) SettingsV1alpha1() v1alpha12.SettingsV1alpha1Interface {
	ret := m.ctrl.Call(m, "SettingsV1alpha1")
	ret0, _ := ret[0].(v1alpha12.SettingsV1alpha1Interface)
	return ret0
}

// SettingsV1alpha1 indicates an expected call of SettingsV1alpha1
func (mr *MockInterfaceMockRecorder) SettingsV1alpha1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SettingsV1alpha1", reflect.TypeOf((*MockInterface)(nil).SettingsV1alpha1))
}

// Storage mocks base method
func (m *MockInterface) Storage() v17.StorageV1Interface {
	ret := m.ctrl.Call(m, "Storage")
	ret0, _ := ret[0].(v17.StorageV1Interface)
	return ret0
}

// Storage indicates an expected call of Storage
func (mr *MockInterfaceMockRecorder) Storage() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Storage", reflect.TypeOf((*MockInterface)(nil).Storage))
}

// StorageV1 mocks base method
func (m *MockInterface) StorageV1() v17.StorageV1Interface {
	ret := m.ctrl.Call(m, "StorageV1")
	ret0, _ := ret[0].(v17.StorageV1Interface)
	return ret0
}

// StorageV1 indicates an expected call of StorageV1
func (mr *MockInterfaceMockRecorder) StorageV1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StorageV1", reflect.TypeOf((*MockInterface)(nil).StorageV1))
}

// StorageV1alpha1 mocks base method
func (m *MockInterface) StorageV1alpha1() v1alpha13.StorageV1alpha1Interface {
	ret := m.ctrl.Call(m, "StorageV1alpha1")
	ret0, _ := ret[0].(v1alpha13.StorageV1alpha1Interface)
	return ret0
}

// StorageV1alpha1 indicates an expected call of StorageV1alpha1
func (mr *MockInterfaceMockRecorder) StorageV1alpha1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StorageV1alpha1", reflect.TypeOf((*MockInterface)(nil).StorageV1alpha1))
}

// StorageV1beta1 mocks base method
func (m *MockInterface) StorageV1beta1() v1beta111.StorageV1beta1Interface {
	ret := m.ctrl.Call(m, "StorageV1beta1")
	ret0, _ := ret[0].(v1beta111.StorageV1beta1Interface)
	return ret0
}

// StorageV1beta1 indicates an expected call of StorageV1beta1
func (mr *MockInterfaceMockRecorder) StorageV1beta1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StorageV1beta1", reflect.TypeOf((*MockInterface)(nil).StorageV1beta1))
}
